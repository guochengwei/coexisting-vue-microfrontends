(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["layx"] = factory();
	else
		root["layx"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 15);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {(function (global, factory) {
	 true ? module.exports = factory() :
	undefined;
}(this, (function () { 'use strict';

var SpriteSymbol = function SpriteSymbol(ref) {
  var id = ref.id;
  var viewBox = ref.viewBox;
  var content = ref.content;

  this.id = id;
  this.viewBox = viewBox;
  this.content = content;
};

/**
 * @return {string}
 */
SpriteSymbol.prototype.stringify = function stringify () {
  return this.content;
};

/**
 * @return {string}
 */
SpriteSymbol.prototype.toString = function toString () {
  return this.stringify();
};

SpriteSymbol.prototype.destroy = function destroy () {
    var this$1 = this;

  ['id', 'viewBox', 'content'].forEach(function (prop) { return delete this$1[prop]; });
};

/**
 * @param {string} content
 * @return {Element}
 */
var parse = function (content) {
  var hasImportNode = !!document.importNode;
  var doc = new DOMParser().parseFromString(content, 'image/svg+xml').documentElement;

  /**
   * Fix for browser which are throwing WrongDocumentError
   * if you insert an element which is not part of the document
   * @see http://stackoverflow.com/a/7986519/4624403
   */
  if (hasImportNode) {
    return document.importNode(doc, true);
  }

  return doc;
};

var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};





function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var deepmerge = createCommonjsModule(function (module, exports) {
(function (root, factory) {
    if (false) {} else {
        module.exports = factory();
    }
}(commonjsGlobal, function () {

function isMergeableObject(val) {
    var nonNullObject = val && typeof val === 'object';

    return nonNullObject
        && Object.prototype.toString.call(val) !== '[object RegExp]'
        && Object.prototype.toString.call(val) !== '[object Date]'
}

function emptyTarget(val) {
    return Array.isArray(val) ? [] : {}
}

function cloneIfNecessary(value, optionsArgument) {
    var clone = optionsArgument && optionsArgument.clone === true;
    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value
}

function defaultArrayMerge(target, source, optionsArgument) {
    var destination = target.slice();
    source.forEach(function(e, i) {
        if (typeof destination[i] === 'undefined') {
            destination[i] = cloneIfNecessary(e, optionsArgument);
        } else if (isMergeableObject(e)) {
            destination[i] = deepmerge(target[i], e, optionsArgument);
        } else if (target.indexOf(e) === -1) {
            destination.push(cloneIfNecessary(e, optionsArgument));
        }
    });
    return destination
}

function mergeObject(target, source, optionsArgument) {
    var destination = {};
    if (isMergeableObject(target)) {
        Object.keys(target).forEach(function (key) {
            destination[key] = cloneIfNecessary(target[key], optionsArgument);
        });
    }
    Object.keys(source).forEach(function (key) {
        if (!isMergeableObject(source[key]) || !target[key]) {
            destination[key] = cloneIfNecessary(source[key], optionsArgument);
        } else {
            destination[key] = deepmerge(target[key], source[key], optionsArgument);
        }
    });
    return destination
}

function deepmerge(target, source, optionsArgument) {
    var array = Array.isArray(source);
    var options = optionsArgument || { arrayMerge: defaultArrayMerge };
    var arrayMerge = options.arrayMerge || defaultArrayMerge;

    if (array) {
        return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument)
    } else {
        return mergeObject(target, source, optionsArgument)
    }
}

deepmerge.all = function deepmergeAll(array, optionsArgument) {
    if (!Array.isArray(array) || array.length < 2) {
        throw new Error('first argument should be an array with at least two elements')
    }

    // we are sure there are at least 2 values, so it is safe to have no initial value
    return array.reduce(function(prev, next) {
        return deepmerge(prev, next, optionsArgument)
    })
};

return deepmerge

}));
});

var namespaces_1 = createCommonjsModule(function (module, exports) {
var namespaces = {
  svg: {
    name: 'xmlns',
    uri: 'http://www.w3.org/2000/svg'
  },
  xlink: {
    name: 'xmlns:xlink',
    uri: 'http://www.w3.org/1999/xlink'
  }
};

exports.default = namespaces;
module.exports = exports.default;
});

/**
 * @param {Object} attrs
 * @return {string}
 */
var objectToAttrsString = function (attrs) {
  return Object.keys(attrs).map(function (attr) {
    var value = attrs[attr].toString().replace(/"/g, '&quot;');
    return (attr + "=\"" + value + "\"");
  }).join(' ');
};

var svg = namespaces_1.svg;
var xlink = namespaces_1.xlink;

var defaultAttrs = {};
defaultAttrs[svg.name] = svg.uri;
defaultAttrs[xlink.name] = xlink.uri;

/**
 * @param {string} [content]
 * @param {Object} [attributes]
 * @return {string}
 */
var wrapInSvgString = function (content, attributes) {
  if ( content === void 0 ) content = '';

  var attrs = deepmerge(defaultAttrs, attributes || {});
  var attrsRendered = objectToAttrsString(attrs);
  return ("<svg " + attrsRendered + ">" + content + "</svg>");
};

var BrowserSpriteSymbol = (function (SpriteSymbol$$1) {
  function BrowserSpriteSymbol () {
    SpriteSymbol$$1.apply(this, arguments);
  }

  if ( SpriteSymbol$$1 ) BrowserSpriteSymbol.__proto__ = SpriteSymbol$$1;
  BrowserSpriteSymbol.prototype = Object.create( SpriteSymbol$$1 && SpriteSymbol$$1.prototype );
  BrowserSpriteSymbol.prototype.constructor = BrowserSpriteSymbol;

  var prototypeAccessors = { isMounted: {} };

  prototypeAccessors.isMounted.get = function () {
    return !!this.node;
  };

  /**
   * @param {Element} node
   * @return {BrowserSpriteSymbol}
   */
  BrowserSpriteSymbol.createFromExistingNode = function createFromExistingNode (node) {
    return new BrowserSpriteSymbol({
      id: node.getAttribute('id'),
      viewBox: node.getAttribute('viewBox'),
      content: node.outerHTML
    });
  };

  BrowserSpriteSymbol.prototype.destroy = function destroy () {
    if (this.isMounted) {
      this.unmount();
    }
    SpriteSymbol$$1.prototype.destroy.call(this);
  };

  /**
   * @param {Element|string} target
   * @return {Element}
   */
  BrowserSpriteSymbol.prototype.mount = function mount (target) {
    if (this.isMounted) {
      return this.node;
    }

    var mountTarget = typeof target === 'string' ? document.querySelector(target) : target;
    var node = this.render();
    this.node = node;

    mountTarget.appendChild(node);

    return node;
  };

  /**
   * @return {Element}
   */
  BrowserSpriteSymbol.prototype.render = function render () {
    var content = this.stringify();
    return parse(wrapInSvgString(content)).childNodes[0];
  };

  BrowserSpriteSymbol.prototype.unmount = function unmount () {
    this.node.parentNode.removeChild(this.node);
  };

  Object.defineProperties( BrowserSpriteSymbol.prototype, prototypeAccessors );

  return BrowserSpriteSymbol;
}(SpriteSymbol));

return BrowserSpriteSymbol;

})));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(14)))

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {(function (global, factory) {
	 true ? module.exports = factory() :
	undefined;
}(this, (function () { 'use strict';

var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};





function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var deepmerge = createCommonjsModule(function (module, exports) {
(function (root, factory) {
    if (false) {} else {
        module.exports = factory();
    }
}(commonjsGlobal, function () {

function isMergeableObject(val) {
    var nonNullObject = val && typeof val === 'object';

    return nonNullObject
        && Object.prototype.toString.call(val) !== '[object RegExp]'
        && Object.prototype.toString.call(val) !== '[object Date]'
}

function emptyTarget(val) {
    return Array.isArray(val) ? [] : {}
}

function cloneIfNecessary(value, optionsArgument) {
    var clone = optionsArgument && optionsArgument.clone === true;
    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value
}

function defaultArrayMerge(target, source, optionsArgument) {
    var destination = target.slice();
    source.forEach(function(e, i) {
        if (typeof destination[i] === 'undefined') {
            destination[i] = cloneIfNecessary(e, optionsArgument);
        } else if (isMergeableObject(e)) {
            destination[i] = deepmerge(target[i], e, optionsArgument);
        } else if (target.indexOf(e) === -1) {
            destination.push(cloneIfNecessary(e, optionsArgument));
        }
    });
    return destination
}

function mergeObject(target, source, optionsArgument) {
    var destination = {};
    if (isMergeableObject(target)) {
        Object.keys(target).forEach(function (key) {
            destination[key] = cloneIfNecessary(target[key], optionsArgument);
        });
    }
    Object.keys(source).forEach(function (key) {
        if (!isMergeableObject(source[key]) || !target[key]) {
            destination[key] = cloneIfNecessary(source[key], optionsArgument);
        } else {
            destination[key] = deepmerge(target[key], source[key], optionsArgument);
        }
    });
    return destination
}

function deepmerge(target, source, optionsArgument) {
    var array = Array.isArray(source);
    var options = optionsArgument || { arrayMerge: defaultArrayMerge };
    var arrayMerge = options.arrayMerge || defaultArrayMerge;

    if (array) {
        return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument)
    } else {
        return mergeObject(target, source, optionsArgument)
    }
}

deepmerge.all = function deepmergeAll(array, optionsArgument) {
    if (!Array.isArray(array) || array.length < 2) {
        throw new Error('first argument should be an array with at least two elements')
    }

    // we are sure there are at least 2 values, so it is safe to have no initial value
    return array.reduce(function(prev, next) {
        return deepmerge(prev, next, optionsArgument)
    })
};

return deepmerge

}));
});

//      
// An event handler can take an optional event argument
// and should not return a value
                                          
// An array of all currently registered event handlers for a type
                                            
// A map of event types and their corresponding event handlers.
                        
                                   
  

/** Mitt: Tiny (~200b) functional event emitter / pubsub.
 *  @name mitt
 *  @returns {Mitt}
 */
function mitt(all                 ) {
	all = all || Object.create(null);

	return {
		/**
		 * Register an event handler for the given type.
		 *
		 * @param  {String} type	Type of event to listen for, or `"*"` for all events
		 * @param  {Function} handler Function to call in response to given event
		 * @memberOf mitt
		 */
		on: function on(type        , handler              ) {
			(all[type] || (all[type] = [])).push(handler);
		},

		/**
		 * Remove an event handler for the given type.
		 *
		 * @param  {String} type	Type of event to unregister `handler` from, or `"*"`
		 * @param  {Function} handler Handler function to remove
		 * @memberOf mitt
		 */
		off: function off(type        , handler              ) {
			if (all[type]) {
				all[type].splice(all[type].indexOf(handler) >>> 0, 1);
			}
		},

		/**
		 * Invoke all handlers for the given type.
		 * If present, `"*"` handlers are invoked after type-matched handlers.
		 *
		 * @param {String} type  The event type to invoke
		 * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler
		 * @memberof mitt
		 */
		emit: function emit(type        , evt     ) {
			(all[type] || []).map(function (handler) { handler(evt); });
			(all['*'] || []).map(function (handler) { handler(type, evt); });
		}
	};
}

var namespaces_1 = createCommonjsModule(function (module, exports) {
var namespaces = {
  svg: {
    name: 'xmlns',
    uri: 'http://www.w3.org/2000/svg'
  },
  xlink: {
    name: 'xmlns:xlink',
    uri: 'http://www.w3.org/1999/xlink'
  }
};

exports.default = namespaces;
module.exports = exports.default;
});

/**
 * @param {Object} attrs
 * @return {string}
 */
var objectToAttrsString = function (attrs) {
  return Object.keys(attrs).map(function (attr) {
    var value = attrs[attr].toString().replace(/"/g, '&quot;');
    return (attr + "=\"" + value + "\"");
  }).join(' ');
};

var svg = namespaces_1.svg;
var xlink = namespaces_1.xlink;

var defaultAttrs = {};
defaultAttrs[svg.name] = svg.uri;
defaultAttrs[xlink.name] = xlink.uri;

/**
 * @param {string} [content]
 * @param {Object} [attributes]
 * @return {string}
 */
var wrapInSvgString = function (content, attributes) {
  if ( content === void 0 ) content = '';

  var attrs = deepmerge(defaultAttrs, attributes || {});
  var attrsRendered = objectToAttrsString(attrs);
  return ("<svg " + attrsRendered + ">" + content + "</svg>");
};

var svg$1 = namespaces_1.svg;
var xlink$1 = namespaces_1.xlink;

var defaultConfig = {
  attrs: ( obj = {
    style: ['position: absolute', 'width: 0', 'height: 0'].join('; ')
  }, obj[svg$1.name] = svg$1.uri, obj[xlink$1.name] = xlink$1.uri, obj )
};
var obj;

var Sprite = function Sprite(config) {
  this.config = deepmerge(defaultConfig, config || {});
  this.symbols = [];
};

/**
 * Add new symbol. If symbol with the same id exists it will be replaced.
 * @param {SpriteSymbol} symbol
 * @return {boolean} `true` - symbol was added, `false` - replaced
 */
Sprite.prototype.add = function add (symbol) {
  var ref = this;
    var symbols = ref.symbols;
  var existing = this.find(symbol.id);

  if (existing) {
    symbols[symbols.indexOf(existing)] = symbol;
    return false;
  }

  symbols.push(symbol);
  return true;
};

/**
 * Remove symbol & destroy it
 * @param {string} id
 * @return {boolean} `true` - symbol was found & successfully destroyed, `false` - otherwise
 */
Sprite.prototype.remove = function remove (id) {
  var ref = this;
    var symbols = ref.symbols;
  var symbol = this.find(id);

  if (symbol) {
    symbols.splice(symbols.indexOf(symbol), 1);
    symbol.destroy();
    return true;
  }

  return false;
};

/**
 * @param {string} id
 * @return {SpriteSymbol|null}
 */
Sprite.prototype.find = function find (id) {
  return this.symbols.filter(function (s) { return s.id === id; })[0] || null;
};

/**
 * @param {string} id
 * @return {boolean}
 */
Sprite.prototype.has = function has (id) {
  return this.find(id) !== null;
};

/**
 * @return {string}
 */
Sprite.prototype.stringify = function stringify () {
  var ref = this.config;
    var attrs = ref.attrs;
  var stringifiedSymbols = this.symbols.map(function (s) { return s.stringify(); }).join('');
  return wrapInSvgString(stringifiedSymbols, attrs);
};

/**
 * @return {string}
 */
Sprite.prototype.toString = function toString () {
  return this.stringify();
};

Sprite.prototype.destroy = function destroy () {
  this.symbols.forEach(function (s) { return s.destroy(); });
};

var SpriteSymbol = function SpriteSymbol(ref) {
  var id = ref.id;
  var viewBox = ref.viewBox;
  var content = ref.content;

  this.id = id;
  this.viewBox = viewBox;
  this.content = content;
};

/**
 * @return {string}
 */
SpriteSymbol.prototype.stringify = function stringify () {
  return this.content;
};

/**
 * @return {string}
 */
SpriteSymbol.prototype.toString = function toString () {
  return this.stringify();
};

SpriteSymbol.prototype.destroy = function destroy () {
    var this$1 = this;

  ['id', 'viewBox', 'content'].forEach(function (prop) { return delete this$1[prop]; });
};

/**
 * @param {string} content
 * @return {Element}
 */
var parse = function (content) {
  var hasImportNode = !!document.importNode;
  var doc = new DOMParser().parseFromString(content, 'image/svg+xml').documentElement;

  /**
   * Fix for browser which are throwing WrongDocumentError
   * if you insert an element which is not part of the document
   * @see http://stackoverflow.com/a/7986519/4624403
   */
  if (hasImportNode) {
    return document.importNode(doc, true);
  }

  return doc;
};

var BrowserSpriteSymbol = (function (SpriteSymbol$$1) {
  function BrowserSpriteSymbol () {
    SpriteSymbol$$1.apply(this, arguments);
  }

  if ( SpriteSymbol$$1 ) BrowserSpriteSymbol.__proto__ = SpriteSymbol$$1;
  BrowserSpriteSymbol.prototype = Object.create( SpriteSymbol$$1 && SpriteSymbol$$1.prototype );
  BrowserSpriteSymbol.prototype.constructor = BrowserSpriteSymbol;

  var prototypeAccessors = { isMounted: {} };

  prototypeAccessors.isMounted.get = function () {
    return !!this.node;
  };

  /**
   * @param {Element} node
   * @return {BrowserSpriteSymbol}
   */
  BrowserSpriteSymbol.createFromExistingNode = function createFromExistingNode (node) {
    return new BrowserSpriteSymbol({
      id: node.getAttribute('id'),
      viewBox: node.getAttribute('viewBox'),
      content: node.outerHTML
    });
  };

  BrowserSpriteSymbol.prototype.destroy = function destroy () {
    if (this.isMounted) {
      this.unmount();
    }
    SpriteSymbol$$1.prototype.destroy.call(this);
  };

  /**
   * @param {Element|string} target
   * @return {Element}
   */
  BrowserSpriteSymbol.prototype.mount = function mount (target) {
    if (this.isMounted) {
      return this.node;
    }

    var mountTarget = typeof target === 'string' ? document.querySelector(target) : target;
    var node = this.render();
    this.node = node;

    mountTarget.appendChild(node);

    return node;
  };

  /**
   * @return {Element}
   */
  BrowserSpriteSymbol.prototype.render = function render () {
    var content = this.stringify();
    return parse(wrapInSvgString(content)).childNodes[0];
  };

  BrowserSpriteSymbol.prototype.unmount = function unmount () {
    this.node.parentNode.removeChild(this.node);
  };

  Object.defineProperties( BrowserSpriteSymbol.prototype, prototypeAccessors );

  return BrowserSpriteSymbol;
}(SpriteSymbol));

var defaultConfig$1 = {
  /**
   * Should following options be automatically configured:
   * - `syncUrlsWithBaseTag`
   * - `locationChangeAngularEmitter`
   * - `moveGradientsOutsideSymbol`
   * @type {boolean}
   */
  autoConfigure: true,

  /**
   * Default mounting selector
   * @type {string}
   */
  mountTo: 'body',

  /**
   * Fix disappearing SVG elements when <base href> exists.
   * Executes when sprite mounted.
   * @see http://stackoverflow.com/a/18265336/796152
   * @see https://github.com/everdimension/angular-svg-base-fix
   * @see https://github.com/angular/angular.js/issues/8934#issuecomment-56568466
   * @type {boolean}
   */
  syncUrlsWithBaseTag: false,

  /**
   * Should sprite listen custom location change event
   * @type {boolean}
   */
  listenLocationChangeEvent: true,

  /**
   * Custom window event name which should be emitted to update sprite urls
   * @type {string}
   */
  locationChangeEvent: 'locationChange',

  /**
   * Emit location change event in Angular automatically
   * @type {boolean}
   */
  locationChangeAngularEmitter: false,

  /**
   * Selector to find symbols usages when updating sprite urls
   * @type {string}
   */
  usagesToUpdate: 'use[*|href]',

  /**
   * Fix Firefox bug when gradients and patterns don't work if they are within a symbol.
   * Executes when sprite is rendered, but not mounted.
   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=306674
   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=353575
   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=1235364
   * @type {boolean}
   */
  moveGradientsOutsideSymbol: false
};

/**
 * @param {*} arrayLike
 * @return {Array}
 */
var arrayFrom = function (arrayLike) {
  return Array.prototype.slice.call(arrayLike, 0);
};

var browser = {
  isChrome: function () { return /chrome/i.test(navigator.userAgent); },
  isFirefox: function () { return /firefox/i.test(navigator.userAgent); },

  // https://msdn.microsoft.com/en-us/library/ms537503(v=vs.85).aspx
  isIE: function () { return /msie/i.test(navigator.userAgent) || /trident/i.test(navigator.userAgent); },
  isEdge: function () { return /edge/i.test(navigator.userAgent); }
};

/**
 * @param {string} name
 * @param {*} data
 */
var dispatchEvent = function (name, data) {
  var event = document.createEvent('CustomEvent');
  event.initCustomEvent(name, false, false, data);
  window.dispatchEvent(event);
};

/**
 * IE doesn't evaluate <style> tags in SVGs that are dynamically added to the page.
 * This trick will trigger IE to read and use any existing SVG <style> tags.
 * @see https://github.com/iconic/SVGInjector/issues/23
 * @see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/
 *
 * @param {Element} node DOM Element to search <style> tags in
 * @return {Array<HTMLStyleElement>}
 */
var evalStylesIEWorkaround = function (node) {
  var updatedNodes = [];

  arrayFrom(node.querySelectorAll('style'))
    .forEach(function (style) {
      style.textContent += '';
      updatedNodes.push(style);
    });

  return updatedNodes;
};

/**
 * @param {string} [url] If not provided - current URL will be used
 * @return {string}
 */
var getUrlWithoutFragment = function (url) {
  return (url || window.location.href).split('#')[0];
};

/* global angular */
/**
 * @param {string} eventName
 */
var locationChangeAngularEmitter = function (eventName) {
  angular.module('ng').run(['$rootScope', function ($rootScope) {
    $rootScope.$on('$locationChangeSuccess', function (e, newUrl, oldUrl) {
      dispatchEvent(eventName, { oldUrl: oldUrl, newUrl: newUrl });
    });
  }]);
};

var defaultSelector = 'linearGradient, radialGradient, pattern';

/**
 * @param {Element} svg
 * @param {string} [selector]
 * @return {Element}
 */
var moveGradientsOutsideSymbol = function (svg, selector) {
  if ( selector === void 0 ) selector = defaultSelector;

  arrayFrom(svg.querySelectorAll('symbol')).forEach(function (symbol) {
    arrayFrom(symbol.querySelectorAll(selector)).forEach(function (node) {
      symbol.parentNode.insertBefore(node, symbol);
    });
  });
  return svg;
};

/**
 * @param {NodeList} nodes
 * @param {Function} [matcher]
 * @return {Attr[]}
 */
function selectAttributes(nodes, matcher) {
  var attrs = arrayFrom(nodes).reduce(function (acc, node) {
    if (!node.attributes) {
      return acc;
    }

    var arrayfied = arrayFrom(node.attributes);
    var matched = matcher ? arrayfied.filter(matcher) : arrayfied;
    return acc.concat(matched);
  }, []);

  return attrs;
}

/**
 * @param {NodeList|Node} nodes
 * @param {boolean} [clone=true]
 * @return {string}
 */

var xLinkNS = namespaces_1.xlink.uri;
var xLinkAttrName = 'xlink:href';

// eslint-disable-next-line no-useless-escape
var specialUrlCharsPattern = /[{}|\\\^\[\]`"<>]/g;

function encoder(url) {
  return url.replace(specialUrlCharsPattern, function (match) {
    return ("%" + (match[0].charCodeAt(0).toString(16).toUpperCase()));
  });
}

function escapeRegExp(str) {
  return str.replace(/[.*+?^${}()|[\]\\]/g, "\\$&"); // $& means the whole matched string
}

/**
 * @param {NodeList} nodes
 * @param {string} startsWith
 * @param {string} replaceWith
 * @return {NodeList}
 */
function updateReferences(nodes, startsWith, replaceWith) {
  arrayFrom(nodes).forEach(function (node) {
    var href = node.getAttribute(xLinkAttrName);
    if (href && href.indexOf(startsWith) === 0) {
      var newUrl = href.replace(startsWith, replaceWith);
      node.setAttributeNS(xLinkNS, xLinkAttrName, newUrl);
    }
  });

  return nodes;
}

/**
 * List of SVG attributes to update url() target in them
 */
var attList = [
  'clipPath',
  'colorProfile',
  'src',
  'cursor',
  'fill',
  'filter',
  'marker',
  'markerStart',
  'markerMid',
  'markerEnd',
  'mask',
  'stroke',
  'style'
];

var attSelector = attList.map(function (attr) { return ("[" + attr + "]"); }).join(',');

/**
 * Update URLs in svg image (like `fill="url(...)"`) and update referencing elements
 * @param {Element} svg
 * @param {NodeList} references
 * @param {string|RegExp} startsWith
 * @param {string} replaceWith
 * @return {void}
 *
 * @example
 * const sprite = document.querySelector('svg.sprite');
 * const usages = document.querySelectorAll('use');
 * updateUrls(sprite, usages, '#', 'prefix#');
 */
var updateUrls = function (svg, references, startsWith, replaceWith) {
  var startsWithEncoded = encoder(startsWith);
  var replaceWithEncoded = encoder(replaceWith);

  var nodes = svg.querySelectorAll(attSelector);
  var attrs = selectAttributes(nodes, function (ref) {
    var localName = ref.localName;
    var value = ref.value;

    return attList.indexOf(localName) !== -1 && value.indexOf(("url(" + startsWithEncoded)) !== -1;
  });

  attrs.forEach(function (attr) { return attr.value = attr.value.replace(new RegExp(escapeRegExp(startsWithEncoded), 'g'), replaceWithEncoded); });
  updateReferences(references, startsWithEncoded, replaceWithEncoded);
};

/**
 * Internal emitter events
 * @enum
 * @private
 */
var Events = {
  MOUNT: 'mount',
  SYMBOL_MOUNT: 'symbol_mount'
};

var BrowserSprite = (function (Sprite$$1) {
  function BrowserSprite(cfg) {
    var this$1 = this;
    if ( cfg === void 0 ) cfg = {};

    Sprite$$1.call(this, deepmerge(defaultConfig$1, cfg));

    var emitter = mitt();
    this._emitter = emitter;
    this.node = null;

    var ref = this;
    var config = ref.config;

    if (config.autoConfigure) {
      this._autoConfigure(cfg);
    }

    if (config.syncUrlsWithBaseTag) {
      var baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');
      emitter.on(Events.MOUNT, function () { return this$1.updateUrls('#', baseUrl); });
    }

    var handleLocationChange = this._handleLocationChange.bind(this);
    this._handleLocationChange = handleLocationChange;

    // Provide way to update sprite urls externally via dispatching custom window event
    if (config.listenLocationChangeEvent) {
      window.addEventListener(config.locationChangeEvent, handleLocationChange);
    }

    // Emit location change event in Angular automatically
    if (config.locationChangeAngularEmitter) {
      locationChangeAngularEmitter(config.locationChangeEvent);
    }

    // After sprite mounted
    emitter.on(Events.MOUNT, function (spriteNode) {
      if (config.moveGradientsOutsideSymbol) {
        moveGradientsOutsideSymbol(spriteNode);
      }
    });

    // After symbol mounted into sprite
    emitter.on(Events.SYMBOL_MOUNT, function (symbolNode) {
      if (config.moveGradientsOutsideSymbol) {
        moveGradientsOutsideSymbol(symbolNode.parentNode);
      }

      if (browser.isIE() || browser.isEdge()) {
        evalStylesIEWorkaround(symbolNode);
      }
    });
  }

  if ( Sprite$$1 ) BrowserSprite.__proto__ = Sprite$$1;
  BrowserSprite.prototype = Object.create( Sprite$$1 && Sprite$$1.prototype );
  BrowserSprite.prototype.constructor = BrowserSprite;

  var prototypeAccessors = { isMounted: {} };

  /**
   * @return {boolean}
   */
  prototypeAccessors.isMounted.get = function () {
    return !!this.node;
  };

  /**
   * Automatically configure following options
   * - `syncUrlsWithBaseTag`
   * - `locationChangeAngularEmitter`
   * - `moveGradientsOutsideSymbol`
   * @param {Object} cfg
   * @private
   */
  BrowserSprite.prototype._autoConfigure = function _autoConfigure (cfg) {
    var ref = this;
    var config = ref.config;

    if (typeof cfg.syncUrlsWithBaseTag === 'undefined') {
      config.syncUrlsWithBaseTag = typeof document.getElementsByTagName('base')[0] !== 'undefined';
    }

    if (typeof cfg.locationChangeAngularEmitter === 'undefined') {
      config.locationChangeAngularEmitter = 'angular' in window;
    }

    if (typeof cfg.moveGradientsOutsideSymbol === 'undefined') {
      config.moveGradientsOutsideSymbol = browser.isFirefox();
    }
  };

  /**
   * @param {Event} event
   * @param {Object} event.detail
   * @param {string} event.detail.oldUrl
   * @param {string} event.detail.newUrl
   * @private
   */
  BrowserSprite.prototype._handleLocationChange = function _handleLocationChange (event) {
    var ref = event.detail;
    var oldUrl = ref.oldUrl;
    var newUrl = ref.newUrl;
    this.updateUrls(oldUrl, newUrl);
  };

  /**
   * Add new symbol. If symbol with the same id exists it will be replaced.
   * If sprite already mounted - `symbol.mount(sprite.node)` will be called.
   * @fires Events#SYMBOL_MOUNT
   * @param {BrowserSpriteSymbol} symbol
   * @return {boolean} `true` - symbol was added, `false` - replaced
   */
  BrowserSprite.prototype.add = function add (symbol) {
    var sprite = this;
    var isNewSymbol = Sprite$$1.prototype.add.call(this, symbol);

    if (this.isMounted && isNewSymbol) {
      symbol.mount(sprite.node);
      this._emitter.emit(Events.SYMBOL_MOUNT, symbol.node);
    }

    return isNewSymbol;
  };

  /**
   * Attach to existing DOM node
   * @param {string|Element} target
   * @return {Element|null} attached DOM Element. null if node to attach not found.
   */
  BrowserSprite.prototype.attach = function attach (target) {
    var this$1 = this;

    var sprite = this;

    if (sprite.isMounted) {
      return sprite.node;
    }

    /** @type Element */
    var node = typeof target === 'string' ? document.querySelector(target) : target;
    sprite.node = node;

    // Already added symbols needs to be mounted
    this.symbols.forEach(function (symbol) {
      symbol.mount(sprite.node);
      this$1._emitter.emit(Events.SYMBOL_MOUNT, symbol.node);
    });

    // Create symbols from existing DOM nodes, add and mount them
    arrayFrom(node.querySelectorAll('symbol'))
      .forEach(function (symbolNode) {
        var symbol = BrowserSpriteSymbol.createFromExistingNode(symbolNode);
        symbol.node = symbolNode; // hack to prevent symbol mounting to sprite when adding
        sprite.add(symbol);
      });

    this._emitter.emit(Events.MOUNT, node);

    return node;
  };

  BrowserSprite.prototype.destroy = function destroy () {
    var ref = this;
    var config = ref.config;
    var symbols = ref.symbols;
    var _emitter = ref._emitter;

    symbols.forEach(function (s) { return s.destroy(); });

    _emitter.off('*');
    window.removeEventListener(config.locationChangeEvent, this._handleLocationChange);

    if (this.isMounted) {
      this.unmount();
    }
  };

  /**
   * @fires Events#MOUNT
   * @param {string|Element} [target]
   * @param {boolean} [prepend=false]
   * @return {Element|null} rendered sprite node. null if mount node not found.
   */
  BrowserSprite.prototype.mount = function mount (target, prepend) {
    if ( target === void 0 ) target = this.config.mountTo;
    if ( prepend === void 0 ) prepend = false;

    var sprite = this;

    if (sprite.isMounted) {
      return sprite.node;
    }

    var mountNode = typeof target === 'string' ? document.querySelector(target) : target;
    var node = sprite.render();
    this.node = node;

    if (prepend && mountNode.childNodes[0]) {
      mountNode.insertBefore(node, mountNode.childNodes[0]);
    } else {
      mountNode.appendChild(node);
    }

    this._emitter.emit(Events.MOUNT, node);

    return node;
  };

  /**
   * @return {Element}
   */
  BrowserSprite.prototype.render = function render () {
    return parse(this.stringify());
  };

  /**
   * Detach sprite from the DOM
   */
  BrowserSprite.prototype.unmount = function unmount () {
    this.node.parentNode.removeChild(this.node);
  };

  /**
   * Update URLs in sprite and usage elements
   * @param {string} oldUrl
   * @param {string} newUrl
   * @return {boolean} `true` - URLs was updated, `false` - sprite is not mounted
   */
  BrowserSprite.prototype.updateUrls = function updateUrls$1 (oldUrl, newUrl) {
    if (!this.isMounted) {
      return false;
    }

    var usages = document.querySelectorAll(this.config.usagesToUpdate);

    updateUrls(
      this.node,
      usages,
      ((getUrlWithoutFragment(oldUrl)) + "#"),
      ((getUrlWithoutFragment(newUrl)) + "#")
    );

    return true;
  };

  Object.defineProperties( BrowserSprite.prototype, prototypeAccessors );

  return BrowserSprite;
}(Sprite));

var ready$1 = createCommonjsModule(function (module) {
/*!
  * domready (c) Dustin Diaz 2014 - License MIT
  */
!function (name, definition) {

  { module.exports = definition(); }

}('domready', function () {

  var fns = [], listener
    , doc = document
    , hack = doc.documentElement.doScroll
    , domContentLoaded = 'DOMContentLoaded'
    , loaded = (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState);


  if (!loaded)
  { doc.addEventListener(domContentLoaded, listener = function () {
    doc.removeEventListener(domContentLoaded, listener);
    loaded = 1;
    while (listener = fns.shift()) { listener(); }
  }); }

  return function (fn) {
    loaded ? setTimeout(fn, 0) : fns.push(fn);
  }

});
});

var spriteNodeId = '__SVG_SPRITE_NODE__';
var spriteGlobalVarName = '__SVG_SPRITE__';
var isSpriteExists = !!window[spriteGlobalVarName];

// eslint-disable-next-line import/no-mutable-exports
var sprite;

if (isSpriteExists) {
  sprite = window[spriteGlobalVarName];
} else {
  sprite = new BrowserSprite({ attrs: { id: spriteNodeId } });
  window[spriteGlobalVarName] = sprite;
}

var loadSprite = function () {
  /**
   * Check for page already contains sprite node
   * If found - attach to and reuse it's content
   * If not - render and mount the new sprite
   */
  var existing = document.getElementById(spriteNodeId);

  if (existing) {
    sprite.attach(existing);
  } else {
    sprite.mount(document.body, true);
  }
};

if (document.body) {
  loadSprite();
} else {
  ready$1(loadSprite);
}

var sprite$1 = sprite;

return sprite$1;

})));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(14)))

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function createFragment() {
    return document.createDocumentFragment();
}
exports.createFragment = createFragment;
function createElement(tagName) {
    return document.createElement(tagName);
}
exports.createElement = createElement;
function createElementNS(tagName) {
    return document.createElementNS("http://www.w3.org/2000/svg", tagName);
}
exports.createElementNS = createElementNS;
function addStyles(element, styles) {
    if (element === null)
        return element;
    for (var _i = 0, _a = Object.keys(styles); _i < _a.length; _i++) {
        var key = _a[_i];
        element.style[key] = styles[key];
    }
    return element;
}
exports.addStyles = addStyles;
function updateClasses(element, handler, prefix) {
    if (prefix === void 0) { prefix = "layx-"; }
    var classes = [];
    for (var _i = 3; _i < arguments.length; _i++) {
        classes[_i - 3] = arguments[_i];
    }
    var currentClasses = element.className.split(/\s+/g);
    classes.forEach(function (item) {
        if (item) {
            var cls = prefix + item, index = currentClasses.indexOf(cls);
            handler(currentClasses, index, cls);
        }
    });
    element.className = currentClasses.join(" ").trim();
    return element;
}
exports.updateClasses = updateClasses;
function addClasses(element, prefix) {
    if (prefix === void 0) { prefix = "layx-"; }
    var classes = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        classes[_i - 2] = arguments[_i];
    }
    if (element === null)
        return element;
    return updateClasses.apply(void 0, [element, function (currentClasses, index, itemClass) {
            if (!~index) {
                currentClasses.push(itemClass);
            }
        }, prefix].concat(classes));
}
exports.addClasses = addClasses;
function removeClasses(element, prefix) {
    if (prefix === void 0) { prefix = "layx-"; }
    var classes = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        classes[_i - 2] = arguments[_i];
    }
    if (element === null)
        return element;
    return updateClasses.apply(void 0, [element, function (currentClasses, index) {
            if (~index) {
                currentClasses.splice(index, 1);
            }
        }, prefix].concat(classes));
}
exports.removeClasses = removeClasses;
function containClass(element, prefix, cls) {
    if (prefix === void 0) { prefix = "layx-"; }
    if (element === null)
        return false;
    var currentClasses = element.className.split(/\s+/g);
    var index = currentClasses.indexOf(prefix + cls);
    return !!~index;
}
exports.containClass = containClass;
function removeElement(element) {
    if (!element)
        return;
    if (!element.parentElement)
        return;
    element.parentElement.removeChild(element);
}
exports.removeElement = removeElement;


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var TypeHelper = __webpack_require__(5);
var ExceptionHelper = __webpack_require__(8);
var JsonHelper = __webpack_require__(18);
function numberCast(option, defaultValue) {
    if (option === undefined)
        return defaultValue;
    if (typeof option === "number")
        return option;
    if (/^(([1-9][0-9]*(\.\d{1,2})?)|(0\.\d{1,2}))$/.test(option)) {
        return Number(option);
    }
    return ExceptionHelper.assertNumber(option);
}
exports.numberCast = numberCast;
function stringCast(option) {
    if (!TypeHelper.isStringWithNotEmpty(option))
        return ExceptionHelper.assertString(option);
    return option;
}
exports.stringCast = stringCast;
function booleanCast(option, defaultValue) {
    if (option === undefined)
        return defaultValue;
    if (typeof option !== "boolean")
        ExceptionHelper.assertBoolean(option);
    return option;
}
exports.booleanCast = booleanCast;
function stringOrBooleanStyleCast(option, defaultValue, trueValue) {
    if (option === undefined)
        return defaultValue;
    if (option === true) {
        if (trueValue === undefined) {
            return defaultValue;
        }
        else {
            return trueValue;
        }
    }
    if (option === false)
        return null;
    return option;
}
exports.stringOrBooleanStyleCast = stringOrBooleanStyleCast;
function typeOrBooleanCast(option, defaultValue, trueValue, falseValue) {
    if (option === undefined)
        return defaultValue;
    if (option === true) {
        if (trueValue === undefined) {
            return defaultValue;
        }
        else {
            return trueValue;
        }
    }
    if (option === false) {
        if (falseValue === undefined) {
            return false;
        }
        else {
            return falseValue;
        }
    }
    return option;
}
exports.typeOrBooleanCast = typeOrBooleanCast;
function undefinedCast(option, defaultValue) {
    if (option === undefined)
        return defaultValue;
    else
        return option;
}
exports.undefinedCast = undefinedCast;
function stringOrUndefinedCast(option) {
    if (option === undefined)
        return undefined;
    if (!TypeHelper.isStringWithNotEmpty(option))
        return ExceptionHelper.assertString(option);
    return option;
}
exports.stringOrUndefinedCast = stringOrUndefinedCast;
function windowModeCast(option, defaultValue) {
    if (option === undefined)
        return defaultValue;
    TypeHelper.isWindowMode(option);
    return option;
}
exports.windowModeCast = windowModeCast;
function borderCast(option, defaultValue) {
    if (typeof option === "string")
        return [option, null];
    if (option === false)
        return [null, null];
    var borderStyle = [null, null];
    var value = {};
    if (option === undefined || option === true) {
        value = JsonHelper.merge({}, defaultValue);
    }
    else {
        value = JsonHelper.merge(defaultValue, option);
    }
    if (typeof value.width === "number"
        && typeof value.color === "string"
        && (typeof value.style === "string" && ["none", "hidden", "dotted", "dashed", "solid", "double", "groove", "ridge", "inset", "outset", "inherit"].indexOf(value.style) > -1)) {
        borderStyle[0] = value.width + "px " + value.style + " " + value.color;
    }
    if (typeof value.radius === "number") {
        borderStyle[1] = value.radius + "px";
    }
    return borderStyle;
}
exports.borderCast = borderCast;
function offsetCast(option, width, height) {
    if (option === undefined)
        return [(innerWidth - width) / 2, (innerHeight - height) / 2];
    if (TypeHelper.isWindowCoord(option)) {
        var _a = option, left = _a[0], top_1 = _a[1];
        return [left, top_1];
    }
    var coord = [0, 0];
    switch (option) {
        case "leftTop":
            break;
        case "leftCenter":
            coord[0] = 0;
            coord[1] = (innerHeight - height) / 2;
            break;
        case "leftBottom":
            coord[0] = 0;
            coord[1] = innerHeight - height;
            break;
        case "topCenter":
            coord[0] = (innerWidth - width) / 2;
            coord[1] = 0;
        case "center":
            coord[0] = (innerWidth - width) / 2;
            coord[1] = (innerHeight - height) / 2;
            break;
        case "bottomCenter":
            coord[0] = (innerWidth - width) / 2;
            coord[1] = innerHeight - height;
            break;
        case "rightTop":
            coord[0] = innerWidth - width;
            coord[1] = 0;
            break;
        case "rightCenter":
            coord[0] = innerWidth - width;
            coord[1] = (innerHeight - height) / 2;
            break;
        case "rightBottom":
            coord[0] = innerWidth - width;
            coord[1] = innerHeight - height;
            break;
        default:
            return ExceptionHelper.assertNever(option);
    }
    return coord;
}
exports.offsetCast = offsetCast;
function windowAnimateCast(option, defaultValue, trueValue, falseValue) {
    if (option === undefined)
        return defaultValue;
    if (option === true) {
        if (trueValue === undefined) {
            return "zoom";
        }
        else {
            return trueValue;
        }
    }
    if (option === false) {
        if (falseValue === undefined) {
            return "none";
        }
        else {
            return falseValue;
        }
    }
    TypeHelper.isWindowAnimate(option);
    return option;
}
exports.windowAnimateCast = windowAnimateCast;
function jsonOrBooleanCast(option, defaultValue, trueValue, falseValue) {
    if (option === undefined)
        return defaultValue;
    if (option === true) {
        if (trueValue === undefined) {
            return defaultValue;
        }
        else {
            return trueValue;
        }
    }
    if (option === false) {
        if (falseValue === undefined) {
            return false;
        }
        else {
            return falseValue;
        }
    }
    if (defaultValue === false)
        return option;
    return JsonHelper.merge(defaultValue, option);
}
exports.jsonOrBooleanCast = jsonOrBooleanCast;
function contextMenuButtonsCast(option) {
    if (option === undefined || option === false)
        return false;
    TypeHelper.isContextMenuButtons(option);
    return option;
}
exports.contextMenuButtonsCast = contextMenuButtonsCast;
function actionButtonsCast(option, defaultValue) {
    if (option === undefined || option === true)
        return defaultValue;
    if (option === false)
        return false;
    TypeHelper.isActionButtons(option);
    return option;
}
exports.actionButtonsCast = actionButtonsCast;
function contentTypeCast(option, defaultValue) {
    if (option === undefined)
        return defaultValue;
    TypeHelper.isContentType(option);
    return option;
}
exports.contentTypeCast = contentTypeCast;
function stringOrElementCast(option) {
    if (!TypeHelper.isStringOrElement(option))
        return ExceptionHelper.assertNever(option);
    return option;
}
exports.stringOrElementCast = stringOrElementCast;
function noticeTypeCast(option, defaultValue) {
    if (option === undefined)
        return defaultValue;
    TypeHelper.isNoticeType(option);
    return option;
}
exports.noticeTypeCast = noticeTypeCast;


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIComponent_1 = __webpack_require__(6);
var UIWindowComponent = (function (_super) {
    __extends(UIWindowComponent, _super);
    function UIWindowComponent(app, window) {
        var _this = _super.call(this, app) || this;
        _this.window = window;
        return _this;
    }
    return UIWindowComponent;
}(UIComponent_1.default));
exports.default = UIWindowComponent;


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ExceptionHelper = __webpack_require__(8);
function isWindowCoord(obj) {
    return obj.length !== undefined
        && obj.length >= 2
        && obj.constructor === Array
        && typeof obj[0] === "number"
        && typeof obj[1] === "number";
}
exports.isWindowCoord = isWindowCoord;
function isWindowMode(obj) {
    switch (obj) {
        case "layer":
        case "embed":
            return true;
        default:
            return ExceptionHelper.assertNever(obj);
    }
}
exports.isWindowMode = isWindowMode;
function isWindowAnimate(obj) {
    switch (obj) {
        case "none":
        case "zoom":
            return true;
        default:
            return ExceptionHelper.assertNever(obj);
    }
}
exports.isWindowAnimate = isWindowAnimate;
function isJsonObject(obj) {
    return typeof obj === "object"
        && obj.constructor !== undefined
        && obj.constructor === Object;
}
exports.isJsonObject = isJsonObject;
function isContextMenuButton(obj) {
    return isJsonObject(obj)
        && obj.id !== undefined
        && obj.label !== undefined;
}
exports.isContextMenuButton = isContextMenuButton;
function isContextMenuButtons(obj) {
    var correct = true;
    for (var _i = 0, obj_1 = obj; _i < obj_1.length; _i++) {
        var item = obj_1[_i];
        if (!isContextMenuButton(item)) {
            correct = false;
            break;
        }
    }
    return correct;
}
exports.isContextMenuButtons = isContextMenuButtons;
function isResizeOptions(obj) {
    if (typeof obj === "boolean")
        return true;
    return isJsonObject(obj) &&
        (obj.left !== undefined ||
            obj.right !== undefined ||
            obj.top !== undefined ||
            obj.bottom !== undefined ||
            obj.leftTop !== undefined ||
            obj.rightTop !== undefined ||
            obj.leftBottom !== undefined ||
            obj.rightBottom !== undefined);
}
exports.isResizeOptions = isResizeOptions;
function isActionButton(obj) {
    return isJsonObject(obj)
        && obj.label !== undefined
        && obj.id !== undefined;
}
exports.isActionButton = isActionButton;
function isActionButtons(obj) {
    var correct = true;
    for (var _i = 0, obj_2 = obj; _i < obj_2.length; _i++) {
        var item = obj_2[_i];
        if (!isActionButton(item)) {
            correct = false;
            break;
        }
    }
    return correct;
}
exports.isActionButtons = isActionButtons;
function isStringWithNotEmpty(obj) {
    return typeof obj === "string"
        && obj.trim().length > 0;
}
exports.isStringWithNotEmpty = isStringWithNotEmpty;
function isElement(obj) {
    return typeof obj === "object"
        && obj instanceof Element;
}
exports.isElement = isElement;
function isContentType(obj) {
    switch (obj) {
        case "html":
        case "local-url":
        case "non-local-url":
            return true;
        default:
            return ExceptionHelper.assertNever(obj);
    }
}
exports.isContentType = isContentType;
function isStringOrElement(obj) {
    return typeof obj === "string" || isElement(obj);
}
exports.isStringOrElement = isStringOrElement;
function isNoticeType(obj) {
    switch (obj) {
        case "info":
        case "success":
        case "warning":
        case "error":
            return true;
        default:
            return ExceptionHelper.assertNever(obj);
    }
}
exports.isNoticeType = isNoticeType;
function isMoveEvent(obj) {
    return obj.button !== undefined
        && obj.touches === undefined;
}
exports.isMoveEvent = isMoveEvent;


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var CastHelper = __webpack_require__(3);
var StringHelper = __webpack_require__(9);
var UIComponent = (function () {
    function UIComponent(app) {
        this.app = app;
        this.components = {};
    }
    UIComponent.prototype.setComponent = function (key, component) {
        key = CastHelper.stringCast(key);
        if (!this.components[key]) {
            this.components[key] = component;
        }
    };
    UIComponent.prototype.getComponent = function (key, component) {
        if (component === void 0) { component = this; }
        key = CastHelper.stringCast(key);
        key = StringHelper.removeValidSymbol(key);
        if (key.indexOf("/") > -1) {
            var keys = key.split("/");
            var tier = component.getComponent(keys[0]);
            if (tier === null)
                return null;
            for (var i = 0; i < keys.length; i++) {
                if (i + 1 < keys.length) {
                    tier = tier.getComponent(keys[i + 1], tier);
                }
                else
                    return tier;
            }
            return tier;
        }
        else {
            if (component.components[key]) {
                return component.components[key];
            }
            return null;
        }
    };
    UIComponent.prototype.removeComponent = function (key) {
        key = CastHelper.stringCast(key);
        if (this.components[key]) {
            delete this.components[key];
        }
    };
    return UIComponent;
}());
exports.default = UIComponent;


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIComponent_1 = __webpack_require__(6);
var ElementHelper = __webpack_require__(2);
var CastHelper = __webpack_require__(3);
var UIIcon = (function (_super) {
    __extends(UIIcon, _super);
    function UIIcon(app, name) {
        var _this = _super.call(this, app) || this;
        _this.className = "" + (_this.app.prefix + "icon");
        _this.name = CastHelper.stringCast(name);
        return _this;
    }
    UIIcon.prototype.present = function () {
        var fragment = ElementHelper.createFragment();
        var iconElement = ElementHelper.createElementNS("svg");
        iconElement.setAttribute("class", this.className);
        var useElement = ElementHelper.createElementNS("use");
        useElement.setAttributeNS("http://www.w3.org/1999/xlink", "xlink:href", "#" + this.name);
        iconElement.appendChild(useElement);
        fragment.appendChild(iconElement);
        return fragment;
    };
    return UIIcon;
}(UIComponent_1.default));
exports.default = UIIcon;


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function assertId() {
    throw new Error("`id` is required.");
}
exports.assertId = assertId;
function assertString(x) {
    throw new Error("Unexpected string: " + x);
}
exports.assertString = assertString;
function assertNumber(x) {
    throw new Error("Unexpected number: " + x);
}
exports.assertNumber = assertNumber;
function assertNever(x) {
    throw new Error("Unexpected object: " + x);
}
exports.assertNever = assertNever;
function assertUnique(x) {
    throw new Error("The element contains '" + x + "' is exists.");
}
exports.assertUnique = assertUnique;
function assertBoolean(x) {
    throw new Error("Unexpected boolean: " + x);
}
exports.assertBoolean = assertBoolean;


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function getKebabCase(str) {
    return str.replace(/[A-Z]/g, function (i) {
        return '-' + i.toLowerCase();
    });
}
exports.getKebabCase = getKebabCase;
function getCamelCase(str) {
    return str.replace(/-([a-z])/g, function (all, i) {
        return i.toUpperCase();
    });
}
exports.getCamelCase = getCamelCase;
function exchangeValue(first, two) {
    var temp = first;
    first = two;
    two = temp;
    return [first, two];
}
exports.exchangeValue = exchangeValue;
function removeValidSymbol(str) {
    var resultStr = str.trim();
    if (resultStr.length === 0)
        return resultStr;
    resultStr = str.replace(/[\r\n\t\s]/g, "");
    return resultStr;
}
exports.removeValidSymbol = removeValidSymbol;
function mendZero(str, total) {
    if (str.length === total)
        return str;
    if (str.length < total) {
        var zeros = "";
        for (var i = 0; i < total - str.length; i++) {
            zeros += "0";
        }
        return zeros + str;
    }
    return str.substr(0, total);
}
exports.mendZero = mendZero;


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIWindowComponent_1 = __webpack_require__(4);
var UIContextMenuButton_1 = __webpack_require__(25);
var ElementHelper = __webpack_require__(2);
var CastHelper = __webpack_require__(3);
var UIContextMenuBar = (function (_super) {
    __extends(UIContextMenuBar, _super);
    function UIContextMenuBar(app, window, uniqueId, contextMenuItems, isTopMenu) {
        if (isTopMenu === void 0) { isTopMenu = true; }
        var _this = _super.call(this, app, window) || this;
        _this.isTopMenu = isTopMenu;
        _this.contextMenuButtons = false;
        _this._element = null;
        _this.contextMenuButtons = CastHelper.contextMenuButtonsCast(contextMenuItems);
        _this.uniqueId = CastHelper.stringCast(uniqueId);
        _this.elementId = _this.window.elementId + "-" + _this.uniqueId + "-" + "context-menu-bar";
        return _this;
    }
    Object.defineProperty(UIContextMenuBar.prototype, "element", {
        get: function () {
            return document.getElementById("" + this.elementId);
        },
        enumerable: true,
        configurable: true
    });
    UIContextMenuBar.prototype.present = function () {
        var fragment = ElementHelper.createFragment();
        if (this.contextMenuButtons !== false && this.contextMenuButtons.length > 0) {
            var contextMenuBarElement = ElementHelper.createElement("div");
            contextMenuBarElement.setAttribute("data-window-id", this.window.id);
            if (this.isTopMenu)
                contextMenuBarElement.id = this.elementId;
            ElementHelper.addClasses(contextMenuBarElement, this.app.prefix, "context-menu-bar");
            contextMenuBarElement.addEventListener("contextmenu", function (ev) {
                ev.preventDefault();
                ev.returnValue = false;
                return false;
            }, true);
            this.createContextMenuButtons(contextMenuBarElement);
            fragment.appendChild(contextMenuBarElement);
        }
        return fragment;
    };
    UIContextMenuBar.prototype.hide = function () {
        if (!this.isTopMenu)
            return;
        ElementHelper.removeClasses(this.element, this.app.prefix, "context-menu-bar-active");
    };
    UIContextMenuBar.prototype.updateOffset = function (ev, zIndex, fixLeft, fixTop) {
        if (!this.isTopMenu
            || !this.element
            || this.contextMenuButtons === false
            || this.contextMenuButtons.length === 0)
            return;
        var computedStyle = getComputedStyle(this.element);
        var contextMenuBarWidth = Number(computedStyle.width.replace('px', '')), contextMenuBarHeight = this.contextMenuButtons.length * UIContextMenuButton_1.default.height, x = ev.pageX, y = ev.pageY;
        var left = x, top = y;
        if (fixLeft !== undefined)
            left = fixLeft;
        else {
            if (contextMenuBarWidth + x > innerWidth) {
                left = x - contextMenuBarWidth;
            }
        }
        if (fixTop !== undefined)
            top = fixTop;
        else {
            if (contextMenuBarHeight + y > innerHeight) {
                top = y - contextMenuBarHeight;
            }
        }
        ElementHelper.addClasses(this.element, this.app.prefix, "context-menu-bar-active");
        ElementHelper.addStyles(this.element, {
            zIndex: "" + zIndex,
            top: top + "px",
            left: left + "px",
        });
    };
    UIContextMenuBar.prototype.updateChildrenOffset = function (ev, childrenContextMenuBarElement, index) {
        if (!(!this.isTopMenu
            && childrenContextMenuBarElement
            && childrenContextMenuBarElement.parentElement
            && childrenContextMenuBarElement.parentElement.parentElement))
            return;
        var parentContextMenuBarElement = childrenContextMenuBarElement.parentElement.parentElement;
        var parentComputedStyle = getComputedStyle(parentContextMenuBarElement);
        var parentContextMenubarWidth = Number(parentComputedStyle.width.replace('px', '')), x = Number(parentComputedStyle.left.replace('px', '')), y = Number(parentComputedStyle.top.replace('px', ''));
        var computedStyle = getComputedStyle(childrenContextMenuBarElement);
        var contextMenuBarWidth = Number(computedStyle.width.replace('px', '')), contextMenuBarHeight = childrenContextMenuBarElement.childElementCount * UIContextMenuButton_1.default.height, contextMenuBarTop = UIContextMenuButton_1.default.height * index;
        var left = parentContextMenubarWidth + x - UIContextMenuBar.offset, top = y + contextMenuBarTop - UIContextMenuBar.offset;
        if (parentContextMenubarWidth + x + contextMenuBarWidth > innerWidth)
            left = x - contextMenuBarWidth + UIContextMenuBar.offset;
        if (y + contextMenuBarTop + contextMenuBarHeight > innerHeight)
            top = innerHeight - contextMenuBarHeight - UIContextMenuBar.offset;
        ElementHelper.addClasses(childrenContextMenuBarElement, this.app.prefix, "context-menu-bar-active");
        ElementHelper.addStyles(childrenContextMenuBarElement, {
            top: top + "px",
            left: left + "px"
        });
    };
    UIContextMenuBar.prototype.hideChildren = function (childrenContextMenuBarElement) {
        if (this.isTopMenu)
            return;
        ElementHelper.removeClasses(childrenContextMenuBarElement, this.app.prefix, "context-menu-bar-active");
    };
    UIContextMenuBar.prototype.createContextMenuButtons = function (parentContextMenuBarElement) {
        if (this.contextMenuButtons === false)
            return;
        var contextMenuButtons = Array();
        var index = 0;
        for (var _i = 0, _a = this.contextMenuButtons; _i < _a.length; _i++) {
            var item = _a[_i];
            var contextMenuButton = new UIContextMenuButton_1.default(this.app, this.window, item, index);
            var contextMenuButtonElement = contextMenuButton.present();
            parentContextMenuBarElement.appendChild(contextMenuButtonElement);
            contextMenuButtons.push(contextMenuButton);
            index++;
        }
        this.setComponent("context-menu-buttons", contextMenuButtons);
    };
    UIContextMenuBar.offset = 4;
    return UIContextMenuBar;
}(UIWindowComponent_1.default));
exports.default = UIContextMenuBar;


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var EventHelper = __webpack_require__(12);
var TypeHelper = __webpack_require__(5);
var DragEvent = (function () {
    function DragEvent(dragElement) {
        var _this = this;
        this.isDragging = false;
        this.isFirstDragging = true;
        this.startX = 0;
        this.startY = 0;
        this.touchStartTime = null;
        this.mousedown = function (ev) {
            _this.mouseStar(ev);
            _this.touchStartTime = new Date();
            if ((TypeHelper.isMoveEvent(ev) && ev.button === 0) || (!TypeHelper.isMoveEvent(ev) && ev.touches.length > 0)) {
                _this.startX = TypeHelper.isMoveEvent(ev) ? ev.pageX : ev.touches[0].pageX;
                _this.startY = TypeHelper.isMoveEvent(ev) ? ev.pageY : ev.touches[0].pageY;
                if (_this.dragStart(ev, _this.startX, _this.startY) !== false) {
                    EventHelper.addTouchMoveEvent(document, _this.mousemove);
                    EventHelper.addTouchEndEvent(document, _this.mouseup);
                }
                ;
            }
        };
        this.mousemove = function (ev) {
            _this.mouseMove(ev);
            var currentX = TypeHelper.isMoveEvent(ev) ? ev.pageX : ev.touches[0].pageX;
            var currentY = TypeHelper.isMoveEvent(ev) ? ev.pageY : ev.touches[0].pageY;
            var distanceX = currentX - _this.startX;
            var distanceY = currentY - _this.startY;
            if ((TypeHelper.isMoveEvent(ev) && (distanceX !== 0 || distanceY !== 0)) || (!TypeHelper.isMoveEvent(ev) && (new Date().getTime() - _this.touchStartTime.getTime() > 30))) {
                _this.isDragging = true;
                if (_this.isFirstDragging === true) {
                    _this.isFirstDragging = false;
                    _this.draggingFirst(ev, currentX, currentY, distanceX, distanceY);
                }
                _this.dragging(ev, currentX, currentY, distanceX, distanceY);
            }
        };
        this.mouseup = function (ev) {
            _this.mouseEnd(ev);
            EventHelper.removeTouchMoveEvent(document, _this.mousemove);
            EventHelper.removeTouchEndEvent(document, _this.mouseup);
            _this.dragEnd(ev);
            _this.isFirstDragging = true;
            _this.isDragging = false;
        };
        EventHelper.addTouchStartEvent(dragElement, this.mousedown);
    }
    DragEvent.prototype.draggingFirst = function (ev, x, y, distanceX, distanceY) { };
    return DragEvent;
}());
exports.default = DragEvent;


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function addTouchStartEvent(element, handler, useCapture) {
    if (useCapture === void 0) { useCapture = false; }
    if (element instanceof Document) {
        element.addEventListener("mousedown", handler, useCapture);
        element.addEventListener("touchstart", handler, useCapture);
    }
    else {
        element.addEventListener("mousedown", handler, useCapture);
        element.addEventListener("touchstart", handler, useCapture);
    }
}
exports.addTouchStartEvent = addTouchStartEvent;
function addTouchMoveEvent(element, handler, useCapture) {
    if (useCapture === void 0) { useCapture = false; }
    if (element instanceof Document) {
        element.addEventListener("mousemove", handler, useCapture);
        element.addEventListener("touchmove", handler, useCapture);
    }
    else {
        element.addEventListener("mousemove", handler, useCapture);
        element.addEventListener("touchmove", handler, useCapture);
    }
}
exports.addTouchMoveEvent = addTouchMoveEvent;
function addTouchEndEvent(element, handler, useCapture) {
    if (useCapture === void 0) { useCapture = false; }
    if (element instanceof Document) {
        element.addEventListener("mouseup", handler, useCapture);
        element.addEventListener("touchend", handler, useCapture);
    }
    else {
        element.addEventListener("mouseup", handler, useCapture);
        element.addEventListener("touchend", handler, useCapture);
    }
}
exports.addTouchEndEvent = addTouchEndEvent;
function removeTouchStartEvent(element, handler) {
    if (element instanceof Document) {
        element.removeEventListener("mousedown", handler);
        element.removeEventListener("touchstart", handler);
    }
    else {
        element.removeEventListener("mousedown", handler);
        element.removeEventListener("touchstart", handler);
    }
}
exports.removeTouchStartEvent = removeTouchStartEvent;
function removeTouchMoveEvent(element, handler) {
    if (element instanceof Document) {
        element.removeEventListener("mousemove", handler);
        element.removeEventListener("touchmove", handler);
    }
    else {
        element.removeEventListener("mousemove", handler);
        element.removeEventListener("touchmove", handler);
    }
}
exports.removeTouchMoveEvent = removeTouchMoveEvent;
function removeTouchEndEvent(element, handler) {
    if (element instanceof Document) {
        element.removeEventListener("mouseup", handler);
        element.removeEventListener("touchend", handler);
    }
    else {
        element.removeEventListener("mouseup", handler);
        element.removeEventListener("touchend", handler);
    }
}
exports.removeTouchEndEvent = removeTouchEndEvent;


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIWindowComponent_1 = __webpack_require__(4);
var UIIcon_1 = __webpack_require__(7);
var ElementHelper = __webpack_require__(2);
var CastHelper = __webpack_require__(3);
var UIActionButton = (function (_super) {
    __extends(UIActionButton, _super);
    function UIActionButton(app, window, options) {
        var _this = _super.call(this, app, window) || this;
        _this._element = null;
        _this.id = CastHelper.stringCast(options.id);
        _this.label = CastHelper.stringCast(options.label);
        _this.handler = options.handler;
        _this.elementId = _this.window.elementId + "-" + "action-button" + "-" + _this.id;
        return _this;
    }
    Object.defineProperty(UIActionButton.prototype, "element", {
        get: function () {
            return document.getElementById("" + this.elementId);
        },
        enumerable: true,
        configurable: true
    });
    UIActionButton.prototype.present = function () {
        var _this = this;
        var fragment = ElementHelper.createFragment();
        var actionButtonElement = ElementHelper.createElement("div");
        actionButtonElement.setAttribute("data-window-id", this.window.id);
        actionButtonElement.id = this.elementId;
        actionButtonElement.setAttribute("title", this.label);
        ElementHelper.addClasses(actionButtonElement, this.app.prefix, "action-button", this.id === "destroy" ? "action-button" + "-destroy" : "", "flexbox", "flex-center");
        ElementHelper.addStyles(actionButtonElement, {
            width: UIActionButton.width + "px"
        });
        actionButtonElement.addEventListener("mousedown", function (ev) {
            if (ev.button === 0 && typeof _this.handler === "function") {
                _this.handler(ev, _this.window);
            }
        }, true);
        actionButtonElement.addEventListener("dblclick", function (ev) {
            ev.stopPropagation();
        });
        var icon = new UIIcon_1.default(this.app, this.id);
        var iconElement = icon.present();
        actionButtonElement.appendChild(iconElement);
        this.setComponent("action-button", icon);
        fragment.appendChild(actionButtonElement);
        return fragment;
    };
    UIActionButton.width = 45;
    UIActionButton.destroy = {
        id: "destroy",
        label: "关闭",
        handler: function (ev, window) {
            window.destroy();
        }
    };
    UIActionButton.max = {
        id: "max",
        label: "最大化",
        handler: function (ev, window) {
            window.max();
        }
    };
    UIActionButton.restore = {
        id: "restore",
        label: "恢复",
        handler: function (ev, window) {
            window.normal();
        }
    };
    UIActionButton.min = {
        id: "min",
        label: "最小化",
        handler: function (ev, window) {
            window.min();
        }
    };
    UIActionButton.about = {
        id: "about",
        label: "关于",
        handler: function (ev, window) {
        }
    };
    UIActionButton.refresh = {
        id: "refresh",
        label: "刷新内容",
        handler: function (ev, window) {
            var content = window.getComponent("" + "content-container");
            if (content)
                content.refreshContent();
        }
    };
    UIActionButton.more = {
        id: "more",
        label: "更多操作",
        handler: function (ev, window) {
        }
    };
    return UIActionButton;
}(UIWindowComponent_1.default));
exports.default = UIActionButton;


/***/ }),
/* 14 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var App_1 = __webpack_require__(16);
__webpack_require__(39);
__webpack_require__(55);
exports.default = (function layx() {
    var layx = function (options) { };
    var app = new App_1.default(layx);
    layx.v = app.version;
    layx.open = function (options) {
        app.open(options);
    };
    layx.windows = app.windows;
    layx.window = app.window;
    layx.lastWindow = app.lastWindow;
    layx.getWindow = function (id) {
        return app.getWindow(id);
    };
    layx.destroy = function (id) {
        app.destroy(id);
    };
    layx.notice = function (options) {
        app.notice(options);
    };
    layx.notices = app.notices;
    return layx;
})();


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var UIWindow_1 = __webpack_require__(17);
var UINotice_1 = __webpack_require__(36);
var ExceptionHelper = __webpack_require__(8);
var TypeHelper = __webpack_require__(5);
var ElementHelper = __webpack_require__(2);
var UIDragLayer_1 = __webpack_require__(38);
var App = (function () {
    function App(layx) {
        var _this = this;
        this.layx = layx;
        this.version = "3.0.0";
        this.prefix = "layx-";
        this._window = null;
        this._lastWindow = null;
        this._salver = null;
        this._zIndex = 200;
        this._aboveZIndex = 300;
        this._salverZIndex = 400;
        this._noticeZIndex = 500;
        this._windows = [];
        this._notices = [];
        this._drayLayer = null;
        this.mousedown = function (ev) {
            if (_this.window) {
                var contextMenuBar = _this.window.getComponent("context-menu-bar");
                contextMenuBar && contextMenuBar.hide();
                _this.window.hideMoreActionContextMenu();
                var topMenuBar = _this.window.getComponent("top-menu-bar");
                topMenuBar && topMenuBar.hide(ev);
                var windowIconContextMenuBar = _this.window.getComponent("\n            " + "tool-bar" + "\n            /" + "title-bar" + "\n            /" + "window-icon-context-menu-bar");
                windowIconContextMenuBar && windowIconContextMenuBar.hide();
            }
            if (_this.lastWindow) {
                var topMenuBar = _this.lastWindow.getComponent("top-menu-bar");
                topMenuBar && topMenuBar.hide(ev);
            }
        };
        this.mousemove = function (ev) {
            if (_this.salver && _this.salver.element) {
                if (ev.pageY >= innerHeight - 50) {
                    if (ElementHelper.containClass(_this.salver.element, _this.prefix, "salver-bar-keep"))
                        return;
                    _this.salver.show();
                }
                else {
                    if (!ElementHelper.containClass(_this.salver.element, _this.prefix, "salver-bar-keep"))
                        return;
                    _this.salver.show(false);
                }
            }
        };
        this.init();
    }
    Object.defineProperty(App.prototype, "window", {
        get: function () {
            return this._window;
        },
        set: function (value) {
            this.layx.window = this._window = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(App.prototype, "lastWindow", {
        get: function () {
            return this._lastWindow;
        },
        set: function (value) {
            this.layx.lastWindow = this._lastWindow = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(App.prototype, "salver", {
        get: function () {
            return this._salver;
        },
        set: function (value) {
            this.layx.salver = this._salver = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(App.prototype, "zIndex", {
        get: function () {
            return this._zIndex = this._zIndex + 3;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(App.prototype, "aboveZIndex", {
        get: function () {
            return this._aboveZIndex = this._aboveZIndex + 3;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(App.prototype, "salverZIndex", {
        get: function () {
            return this._salverZIndex;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(App.prototype, "noticeZIndex", {
        get: function () {
            return this._noticeZIndex = this._noticeZIndex + 1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(App.prototype, "windows", {
        get: function () {
            return this._windows;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(App.prototype, "notices", {
        get: function () {
            return this._notices;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(App.prototype, "drayLayer", {
        get: function () {
            return this._drayLayer;
        },
        set: function (value) {
            this._drayLayer = value;
        },
        enumerable: true,
        configurable: true
    });
    App.prototype.open = function (options) {
        var _this = this;
        var window = this.getWindow(options.id);
        if (window) {
            window.updateZIndex();
            window.flicker();
        }
        else {
            window = new UIWindow_1.default(this, options);
            var windowPresent = window.present();
            document.body.appendChild(windowPresent);
            this.lastWindow = this.window;
            this.window = window;
            this.windows.push(window);
            if (this.salver) {
                if (this.salver.items.length === 0) {
                    this.salver.show();
                    setTimeout(function () {
                        _this.salver.show(false);
                    }, 300);
                }
                this.salver.addOrUpdateItem();
            }
        }
        window.zoomActionButtons(window.width);
    };
    App.prototype.destroy = function (id) {
        if (!TypeHelper.isStringWithNotEmpty(id))
            ExceptionHelper.assertId();
        var window = this.getWindow(id);
        if (window)
            window.destroy();
    };
    App.prototype.getWindow = function (id) {
        if (!TypeHelper.isStringWithNotEmpty(id))
            ExceptionHelper.assertId();
        for (var _i = 0, _a = this.windows; _i < _a.length; _i++) {
            var item = _a[_i];
            if (item.id === id) {
                if (item.element) {
                    return item;
                }
                else {
                    var index = this.windows.indexOf(item);
                    this.windows.splice(index, 1);
                    return null;
                }
            }
        }
        return null;
    };
    App.prototype.notice = function (options) {
        var notice = new UINotice_1.default(this, options);
        var noticeElement = notice.present();
        document.body.append(noticeElement);
        this.notices.push(notice);
        var index = this.notices.indexOf(notice);
        notice.updateOffset(index, true);
    };
    App.prototype.init = function () {
        this.bindEvent();
    };
    App.prototype.createDragLayer = function () {
        if (!this.drayLayer) {
            var dragLayer = new UIDragLayer_1.default(this);
            var dragLayerElement = dragLayer.present();
            document.body.appendChild(dragLayerElement);
            this.drayLayer = dragLayer;
        }
    };
    App.prototype.bindEvent = function () {
        var _this = this;
        document.addEventListener("DOMContentLoaded", function () {
            if (!document.body.id)
                document.body.id = _this.prefix + "body";
            _this.createDragLayer();
        });
        document.addEventListener("mousedown", this.mousedown, true);
        document.addEventListener("mousemove", this.mousemove, true);
    };
    return App;
}());
exports.default = App;


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIComponent_1 = __webpack_require__(6);
var UIParclose_1 = __webpack_require__(19);
var UIResizeBar_1 = __webpack_require__(20);
var UIToolBar_1 = __webpack_require__(22);
var UIActionButton_1 = __webpack_require__(13);
var UIContextMenuBar_1 = __webpack_require__(10);
var UITopMenuBar_1 = __webpack_require__(28);
var UISalverBar_1 = __webpack_require__(30);
var UIContent_1 = __webpack_require__(32);
var UIStatuBar_1 = __webpack_require__(35);
var ElementHelper = __webpack_require__(2);
var CastHelper = __webpack_require__(3);
var TypeHelper = __webpack_require__(5);
var ExceptionHelper = __webpack_require__(8);
var StringHelper = __webpack_require__(9);
var UIWindow = (function (_super) {
    __extends(UIWindow, _super);
    function UIWindow(app, options) {
        var _a, _b;
        var _this = _super.call(this, app) || this;
        _this.zIndex = _this.app.zIndex;
        _this.enableAnimated = false;
        _this.status = "normal";
        _this.lastStatus = "none";
        _this.flickering = false;
        _this.width = 800;
        _this.height = 600;
        _this.maxWidth = innerWidth;
        _this.maxHeight = innerHeight;
        _this.minWidth = 200;
        _this.minHeight = 200;
        _this.background = "#ffffff";
        _this.shadow = "rgba(0, 0, 0, 0.3) 1px 1px 24px";
        _this.parclose = false;
        _this.mode = "layer";
        _this.border = null;
        _this.borderRadius = null;
        _this.animate = "zoom";
        _this.resizeBar = {};
        _this.toolBar = {};
        _this.contextMenu = false;
        _this.topMenu = false;
        _this.content = {};
        _this.statuBar = false;
        _this.storeStatus = true;
        _this._element = null;
        _this._flickerShadow = null;
        _this._lastStoreStatus = null;
        if (!TypeHelper.isStringWithNotEmpty(options.id))
            ExceptionHelper.assertId();
        _this.id = options.id;
        _this.elementId = _this.app.prefix + _this.id;
        _this.mode = CastHelper.windowModeCast(options.mode, _this.mode);
        _this.width = CastHelper.numberCast(options.width, _this.width);
        _this.height = CastHelper.numberCast(options.height, _this.height);
        _this.maxWidth = Math.min(CastHelper.numberCast(options.maxWidth, _this.maxWidth), _this.maxWidth);
        _this.maxHeight = Math.min(CastHelper.numberCast(options.maxHeight, _this.maxHeight), _this.maxHeight);
        _this.minWidth = Math.max(CastHelper.numberCast(options.minWidth, _this.minWidth), _this.minWidth);
        _this.minHeight = Math.max(CastHelper.numberCast(options.minHeight, _this.minHeight), _this.minHeight);
        _this.width = Math.max(_this.minWidth, _this.width);
        _this.width = Math.min(_this.maxWidth, _this.width);
        _this.height = Math.max(_this.minHeight, _this.height);
        _this.height = Math.min(_this.maxHeight, _this.height);
        _a = CastHelper.offsetCast(options.offset, _this.width, _this.height), _this.left = _a[0], _this.top = _a[1];
        _this.background = CastHelper.stringOrBooleanStyleCast(options.background, _this.background);
        _this.shadow = CastHelper.stringOrBooleanStyleCast(options.shadow, _this.shadow);
        _this.parclose = CastHelper.typeOrBooleanCast(options.parclose, _this.parclose, 0);
        _b = CastHelper.borderCast(options.border, {
            width: 1,
            style: "solid",
            color: "#3baced",
            radius: 4
        }), _this.border = _b[0], _this.borderRadius = _b[1];
        _this.animate = CastHelper.windowAnimateCast(options.animate, _this.animate);
        _this.enableAnimated = _this.animate !== "none";
        _this.resizeBar = CastHelper.jsonOrBooleanCast(options.resizeBar, _this.resizeBar);
        _this.toolBar = CastHelper.jsonOrBooleanCast(options.toolBar, _this.toolBar);
        _this.contextMenu = CastHelper.contextMenuButtonsCast(options.contextMenu);
        _this.topMenu = CastHelper.contextMenuButtonsCast(options.topMenu);
        _this.content = CastHelper.jsonOrBooleanCast(options.content, _this.content);
        _this.statuBar = CastHelper.jsonOrBooleanCast(options.statuBar, _this.statuBar);
        _this.storeStatus = CastHelper.booleanCast(options.storeStatus, _this.storeStatus);
        window.addEventListener('resize', function () {
            _this.maxWidth = Math.min(CastHelper.numberCast(options.maxWidth, innerWidth), innerWidth);
            _this.maxHeight = Math.min(CastHelper.numberCast(options.maxHeight, innerHeight), innerHeight);
        });
        return _this;
    }
    Object.defineProperty(UIWindow.prototype, "element", {
        get: function () {
            return document.getElementById(this.elementId);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIWindow.prototype, "flickerShadow", {
        get: function () {
            return this.getFlickerShadow();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIWindow.prototype, "lastStoreStatus", {
        get: function () {
            var storeStatus = localStorage.getItem(this.app.prefix + this.id);
            if (!storeStatus)
                return null;
            return eval("(" + storeStatus + ")");
        },
        set: function (value) {
            localStorage.setItem(this.app.prefix + this.id, JSON.stringify(value));
        },
        enumerable: true,
        configurable: true
    });
    UIWindow.prototype.present = function () {
        var _this = this;
        var fragment = ElementHelper.createFragment();
        var windowElement = ElementHelper.createElement("div");
        windowElement.id = this.elementId;
        windowElement.setAttribute("data-window-id", this.id);
        ElementHelper.addClasses(windowElement, this.app.prefix, "window", "window-" + this.mode, "flexbox", "flex-column", this.enableAnimated ? "animate" : "", this.enableAnimated ? "animate-" + this.animate + "-show" : "");
        this.readStoreStatus();
        ElementHelper.addStyles(windowElement, {
            zIndex: this.mode === "layer" ? "" + this.zIndex : null,
            maxWidth: this.maxWidth + "px",
            maxHeight: this.maxHeight + "px",
            minWidth: this.minWidth + "px",
            minHeight: this.minHeight + "px",
            width: this.width + "px",
            height: this.height + "px",
            top: this.mode === "layer" ? this.top + "px" : null,
            left: this.mode === "layer" ? this.left + "px" : null,
            background: this.background,
            border: this.border,
            borderRadius: this.borderRadius,
            webkitBorderRadius: this.borderRadius,
            boxShadow: this.shadow,
            webkitBoxShadow: this.shadow
        });
        window.addEventListener('resize', function () {
            ElementHelper.addStyles(windowElement, {
                maxWidth: _this.maxWidth + "px",
                maxHeight: _this.maxHeight + "px",
            });
        });
        windowElement.addEventListener("mousedown", function (ev) {
            _this.updateZIndex();
        }, true);
        if (this.toolBar !== false) {
            var toolBar = new UIToolBar_1.default(this.app, this, this.toolBar);
            var toolBarElement = toolBar.present();
            windowElement.appendChild(toolBarElement);
            this.setComponent("tool-bar", toolBar);
        }
        if (this.topMenu !== false) {
            var topMenuBar = new UITopMenuBar_1.default(this.app, this, this.topMenu);
            var topMenuBarElement = topMenuBar.present();
            windowElement.appendChild(topMenuBarElement);
            this.setComponent("top-menu-bar", topMenuBar);
        }
        if (this.content !== false) {
            var content = new UIContent_1.default(this.app, this, this.content);
            var contentElement = content.present();
            windowElement.appendChild(contentElement);
            this.setComponent("content-container", content);
        }
        if (this.resizeBar !== false) {
            var resizeBar = new UIResizeBar_1.default(this.app, this, this.resizeBar);
            var resizeElement = resizeBar.present();
            windowElement.appendChild(resizeElement);
            this.setComponent("resize-bar", resizeBar);
        }
        if (this.statuBar !== false) {
            var statuBar = new UIStatuBar_1.default(this.app, this, this.statuBar);
            var statuBarElement = statuBar.present();
            windowElement.appendChild(statuBarElement);
            this.setComponent("statu-bar", statuBar);
        }
        if (this.parclose !== false) {
            var parclose = new UIParclose_1.default(this.app, this, { opacity: this.parclose });
            var parcloseElement = parclose.present();
            fragment.appendChild(parcloseElement);
            this.setComponent("parclose", parclose);
            if (this.app.salver) {
                this.app.salver.parsecloseCount++;
            }
        }
        if (this.contextMenu !== false) {
            var contextMenuBar = new UIContextMenuBar_1.default(this.app, this, "window", this.contextMenu);
            var contextMenuBarElement = contextMenuBar.present();
            fragment.appendChild(contextMenuBarElement);
            this.setComponent("context-menu-bar", contextMenuBar);
        }
        this.bindEvent(windowElement);
        if (!this.app.salver) {
            var salverBar = new UISalverBar_1.default(this.app);
            var salverBarElement = salverBar.present();
            fragment.appendChild(salverBarElement);
            this.app.salver = salverBar;
        }
        fragment.appendChild(windowElement);
        return fragment;
    };
    UIWindow.prototype.readStoreStatus = function () {
        var lastStoreStatus = this.lastStoreStatus;
        if (this.storeStatus) {
            if (lastStoreStatus) {
                this.width = lastStoreStatus.width;
                this.height = lastStoreStatus.height;
                this.top = lastStoreStatus.top;
                this.left = lastStoreStatus.left;
            }
            else {
                this.lastStoreStatus = {
                    top: this.top,
                    left: this.left,
                    width: this.width,
                    height: this.height
                };
            }
        }
    };
    UIWindow.prototype.handlerContentByAnimate = function (isFadeOut) {
        if (isFadeOut === void 0) { isFadeOut = true; }
    };
    UIWindow.prototype.bindEvent = function (windowElement) {
        var _this = this;
        if (this.contextMenu !== false) {
            windowElement.addEventListener("contextmenu", function (ev) {
                ev.preventDefault();
                ev.returnValue = false;
                var contextMenuBar = _this.getComponent("" + "context-menu-bar");
                contextMenuBar && contextMenuBar.updateOffset(ev, _this.zIndex + 1);
                return false;
            });
        }
        windowElement.addEventListener("animationstart", function (ev) {
            _this.handlerContentByAnimate();
        });
        windowElement.addEventListener("animationend", function (ev) {
            var element = _this.element;
            ElementHelper.removeClasses(element, _this.app.prefix, "animate-" + _this.animate + "-show", "animate-" + _this.animate + "-drag-to-normal");
            if (ElementHelper.containClass(element, _this.app.prefix, "animate-" + _this.animate + "-destroy"))
                _this.remove();
            if (ElementHelper.containClass(element, _this.app.prefix, "animate-" + _this.animate + "-to-min"))
                _this.minimize();
            _this.handlerContentByAnimate(false);
        });
        windowElement.addEventListener("transitionend", function (ev) {
            ElementHelper.removeClasses(_this.element, _this.app.prefix, "animate-" + _this.animate + "-to-max", "animate-" + _this.animate + "-to-normal");
            _this.handlerContentByAnimate(false);
        });
    };
    UIWindow.prototype.destroy = function () {
        if (this.enableAnimated) {
            ElementHelper.addClasses(this.element, this.app.prefix, "animate-" + this.animate + "-destroy");
        }
        else
            this.remove();
    };
    UIWindow.prototype.remove = function () {
        if (this.status === "max") {
            ElementHelper.removeClasses(document.body, "z" + this.app.prefix, "body-noscroll");
        }
        var parclose = this.getComponent("parclose");
        if (parclose) {
            ElementHelper.removeElement(parclose.element);
            if (this.app.salver) {
                this.app.salver.parsecloseCount--;
            }
        }
        if (this.app.salver)
            this.app.salver.removeItem();
        var index = this.app.windows.indexOf(this);
        this.app.windows.splice(index, 1);
        this.app.window = null;
        ElementHelper.removeElement(this.element);
    };
    UIWindow.prototype.normal = function (dragToNormal) {
        if (dragToNormal === void 0) { dragToNormal = false; }
        var windowElement = this.element;
        if (!windowElement || !windowElement.parentElement || this.status === "normal")
            return;
        this.lastStatus = this.status;
        this.status = "normal";
        this.handlerContentByAnimate();
        ElementHelper.removeClasses(document.body, "z" + this.app.prefix, "body-noscroll");
        ElementHelper.addClasses(windowElement, this.app.prefix, this.enableAnimated ? (dragToNormal === false ? "animate-" + this.animate + "-to-normal" : "animate-" + this.animate + "-drag-to-normal") : "");
        ElementHelper.addStyles(windowElement, {
            top: this.top + "px",
            left: this.left + "px",
            width: this.width + "px",
            height: this.height + "px",
            borderRadius: this.borderRadius
        });
        var resizeBar = this.getComponent("resize-bar");
        if (resizeBar) {
            ElementHelper.removeClasses(resizeBar.element, this.app.prefix, "resize-bar-disabled");
        }
        var actionButtons = this.getComponent("\n        " + "tool-bar" + "\n        /" + "action-bar" + "\n        /" + "action-buttons");
        if (!actionButtons || actionButtons.length === 0)
            return;
        for (var _i = 0, actionButtons_1 = actionButtons; _i < actionButtons_1.length; _i++) {
            var item = actionButtons_1[_i];
            if (item.id !== "max")
                continue;
            var restoreActionButton = new UIActionButton_1.default(this.app, this, UIActionButton_1.default.restore);
            var restoreActionButtonElement = restoreActionButton.element;
            if (!(restoreActionButtonElement && restoreActionButtonElement.parentElement))
                return;
            var maxActionButton = new UIActionButton_1.default(this.app, this, item);
            var maxActionButtonElement = maxActionButton.present();
            restoreActionButtonElement.parentElement.replaceChild(maxActionButtonElement, restoreActionButtonElement);
            break;
        }
        this.zoomActionButtons(this.width);
    };
    UIWindow.prototype.max = function () {
        var windowElement = this.element;
        if (!windowElement || !windowElement.parentElement || this.status === "max")
            return;
        this.handlerContentByAnimate();
        this.lastStatus = this.status;
        this.status = "max";
        ElementHelper.addClasses(document.body, "z" + this.app.prefix, "body-noscroll");
        ElementHelper.addClasses(windowElement, this.app.prefix, this.enableAnimated ? "animate-" + this.animate + "-to-max" : "");
        ElementHelper.addStyles(windowElement, {
            top: "0",
            left: "0",
            width: innerWidth + "px",
            height: innerHeight + "px",
            borderRadius: "0"
        });
        var resizeBar = this.getComponent("resize-bar");
        if (resizeBar) {
            ElementHelper.addClasses(resizeBar.element, this.app.prefix, "resize-bar-disabled");
        }
        var actionButtons = this.getComponent("\n        " + "tool-bar" + "\n        /" + "action-bar" + "\n        /" + "action-buttons");
        if (!actionButtons || actionButtons.length === 0)
            return;
        for (var _i = 0, actionButtons_2 = actionButtons; _i < actionButtons_2.length; _i++) {
            var item = actionButtons_2[_i];
            if (item.id !== "max")
                continue;
            var maxActionButtonElement = item.element;
            if (!(maxActionButtonElement && maxActionButtonElement.parentElement))
                return;
            var restoreActionButton = new UIActionButton_1.default(this.app, this, UIActionButton_1.default.restore);
            var restoreActionButtonElement = restoreActionButton.present();
            maxActionButtonElement.parentElement.replaceChild(restoreActionButtonElement, maxActionButtonElement);
            break;
        }
        this.zoomActionButtons(innerWidth);
    };
    UIWindow.prototype.min = function () {
        var windowElement = this.element;
        if (!windowElement || this.status === "min")
            return;
        if (this.parclose !== false) {
            this.flicker();
        }
        else {
            if (this.enableAnimated) {
                ElementHelper.addClasses(this.element, this.app.prefix, "animate-" + this.animate + "-to-min");
            }
            else
                this.minimize();
        }
    };
    UIWindow.prototype.minimize = function () {
        var windowElement = this.element;
        ElementHelper.addClasses(windowElement, this.app.prefix, "window-min");
        if (this.enableAnimated) {
            ElementHelper.removeClasses(windowElement, this.app.prefix, "animate-" + this.animate + "-to-min");
        }
        if (this.app.salver)
            this.app.salver.addOrUpdateItem();
        this.lastStatus = this.status;
        this.status = "min";
    };
    UIWindow.prototype.flicker = function () {
        var _this = this;
        if (this.element && this.mode === "layer" && this.flickering === false) {
            var flickerTimes_1 = 0;
            var duration = 60;
            var flickerTotals_1 = 12;
            this.flickering = true;
            for (var i = 0; i < flickerTotals_1; i++) {
                if (i % 2 == 0) {
                    setTimeout(function () {
                        ElementHelper.addStyles(_this.element, {
                            boxShadow: _this.flickerShadow,
                            webkitBoxShadow: _this.flickerShadow
                        });
                        flickerTimes_1++;
                    }, i * duration);
                }
                else {
                    setTimeout(function () {
                        ElementHelper.addStyles(_this.element, {
                            boxShadow: _this.shadow,
                            webkitBoxShadow: _this.shadow
                        });
                        flickerTimes_1++;
                    }, i * duration);
                }
            }
            var checkFlickering_1 = setInterval(function () {
                if (flickerTimes_1 >= flickerTotals_1) {
                    clearInterval(checkFlickering_1);
                    _this.flickering = false;
                }
            }, duration);
        }
    };
    UIWindow.prototype.showThis = function (windowElement) {
        var _a;
        if (this.status === "min") {
            this.handlerContentByAnimate(true);
            windowElement = windowElement || this.element;
            ElementHelper.removeClasses(windowElement, this.app.prefix, "window-min");
            ElementHelper.addClasses(windowElement, this.app.prefix, this.enableAnimated ? "animate-" + this.animate + "-show" : "");
            if (this.enableAnimated) {
                ElementHelper.addClasses(windowElement, this.app.prefix, "animate-" + this.animate + "-show");
            }
            (_a = StringHelper.exchangeValue(this.status, this.lastStatus), this.status = _a[0], this.lastStatus = _a[1]);
        }
    };
    UIWindow.prototype.updateZIndex = function () {
        if (this === this.app.window) {
            this.showThis();
            return;
        }
        ;
        var windowElement = this.element;
        if (this.mode === "layer") {
            this.showThis(windowElement);
            this.zIndex = this.app.zIndex;
            ElementHelper.addStyles(windowElement, {
                zIndex: "" + this.zIndex
            });
            var parclose = this.getComponent("parclose");
            parclose && parclose.updateZIndex(this.zIndex - 1);
            this.app.lastWindow = this.app.window;
            this.app.window = this;
            this.app.salver && this.app.salver.addOrUpdateItem();
        }
    };
    UIWindow.prototype.hideMoreActionContextMenu = function () {
        var moreActionContextMenuBar = this.getComponent("more-action-context-menu-bar");
        if (!moreActionContextMenuBar)
            return;
        ElementHelper.removeClasses(moreActionContextMenuBar.element, this.app.prefix, "context-menu-bar-active");
    };
    UIWindow.prototype.removeMoreActionContextMenu = function () {
        var moreActionButton = new UIActionButton_1.default(this.app, this, UIActionButton_1.default.more);
        var moreActionButtonElement = moreActionButton.element;
        ElementHelper.removeElement(moreActionButtonElement);
    };
    UIWindow.prototype.zoomActionButtons = function (windowWidth) {
        var actionBar = this.getComponent("\n        " + "tool-bar" + "\n        /" + "action-bar");
        actionBar && actionBar.zoomActionButtons(windowWidth);
    };
    UIWindow.prototype.getFlickerShadow = function () {
        if (!this.shadow)
            return this.shadow;
        var shadowArray = this.shadow.split(" ");
        shadowArray[shadowArray.length - 1] = Number(shadowArray[shadowArray.length - 1].replace("px", "")) / 2 + "px";
        return shadowArray.join(" ");
    };
    return UIWindow;
}(UIComponent_1.default));
exports.default = UIWindow;


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var TypeHelper = __webpack_require__(5);
function clone(source) {
    var newObject = {};
    for (var _i = 0, _a = Object.keys(source); _i < _a.length; _i++) {
        var key = _a[_i];
        newObject[key] = TypeHelper.isJsonObject(source[key]) ? clone(source[key]) : source[key];
    }
    return newObject;
}
exports.clone = clone;
function merge(source, dest) {
    var newObject = clone(source);
    for (var _i = 0, _a = Object.keys(dest); _i < _a.length; _i++) {
        var key = _a[_i];
        if (newObject[key] === undefined || !TypeHelper.isJsonObject(dest[key])) {
            newObject[key] = dest[key];
            continue;
        }
        newObject[key] = merge(newObject[key], dest[key]);
    }
    return newObject;
}
exports.merge = merge;


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIWindowComponent_1 = __webpack_require__(4);
var ElementHelper = __webpack_require__(2);
var CastHelper = __webpack_require__(3);
var UIParclose = (function (_super) {
    __extends(UIParclose, _super);
    function UIParclose(app, window, options) {
        var _this = _super.call(this, app, window) || this;
        _this.elementId = _this.window.elementId + "-" + "parclose";
        _this.opacity = 0;
        _this._element = null;
        _this.opacity = CastHelper.numberCast(options.opacity, _this.opacity);
        return _this;
    }
    Object.defineProperty(UIParclose.prototype, "element", {
        get: function () {
            return document.getElementById("" + this.elementId);
        },
        enumerable: true,
        configurable: true
    });
    UIParclose.prototype.present = function () {
        var fragment = ElementHelper.createFragment();
        var parcloseElement = ElementHelper.createElement("div");
        parcloseElement.setAttribute("data-window-id", this.window.id);
        parcloseElement.id = this.elementId;
        ElementHelper.addClasses(parcloseElement, this.app.prefix, "parclose");
        ElementHelper.addStyles(parcloseElement, {
            backgroundColor: "rgba(0,0,0," + this.opacity + ")",
            zIndex: "" + (this.window.zIndex - 2)
        });
        this.bindEvent(parcloseElement);
        fragment.appendChild(parcloseElement);
        return fragment;
    };
    UIParclose.prototype.updateZIndex = function (zIndex) {
        ElementHelper.addStyles(this.element, {
            zIndex: "" + zIndex
        });
    };
    UIParclose.prototype.bindEvent = function (parcloseElement) {
        var _this = this;
        parcloseElement.addEventListener("mousedown", function (ev) {
            _this.window.flicker();
        }, true);
        parcloseElement.addEventListener("contextmenu", function (ev) {
            ev.preventDefault();
            ev.returnValue = false;
            return false;
        });
    };
    return UIParclose;
}(UIWindowComponent_1.default));
exports.default = UIParclose;


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIWindowComponent_1 = __webpack_require__(4);
var WindowResizeDragEvent_1 = __webpack_require__(21);
var StringHelper = __webpack_require__(9);
var ElementHelper = __webpack_require__(2);
var CastHelper = __webpack_require__(3);
var UIResizeBar = (function (_super) {
    __extends(UIResizeBar, _super);
    function UIResizeBar(app, window, options) {
        var _this = _super.call(this, app, window) || this;
        _this.elementId = _this.window.elementId + "-" + "resize-bar";
        _this.left = true;
        _this.right = true;
        _this.top = true;
        _this.bottom = true;
        _this.leftTop = true;
        _this.rightTop = true;
        _this.leftBottom = true;
        _this.rightBottom = true;
        _this._element = null;
        _this.directions = [
            "left",
            "right",
            "top",
            "bottom",
            "left-top",
            "right-top",
            "left-bottom",
            "right-bottom"
        ];
        _this.left = CastHelper.booleanCast(options.left, _this.left);
        _this.right = CastHelper.booleanCast(options.right, _this.right);
        _this.top = CastHelper.booleanCast(options.top, _this.top);
        _this.bottom = CastHelper.booleanCast(options.bottom, _this.bottom);
        _this.leftTop = CastHelper.booleanCast(options.leftTop, _this.leftTop);
        _this.rightTop = CastHelper.booleanCast(options.rightTop, _this.rightTop);
        _this.leftBottom = CastHelper.booleanCast(options.leftBottom, _this.leftBottom);
        _this.rightBottom = CastHelper.booleanCast(options.rightBottom, _this.rightBottom);
        return _this;
    }
    Object.defineProperty(UIResizeBar.prototype, "element", {
        get: function () {
            return document.getElementById("" + this.elementId);
        },
        enumerable: true,
        configurable: true
    });
    UIResizeBar.prototype.present = function () {
        var fragment = ElementHelper.createFragment();
        if (this.leastOneTrue()) {
            var resizeElement = ElementHelper.createElement("div");
            resizeElement.setAttribute("data-window-id", this.window.id);
            resizeElement.id = this.elementId;
            ElementHelper.addClasses(resizeElement, this.app.prefix, "resize-bar");
            this.bindEvent(resizeElement);
            for (var _i = 0, _a = this.directions; _i < _a.length; _i++) {
                var key = _a[_i];
                if (this[StringHelper.getCamelCase(key)] === true) {
                    resizeElement.appendChild(this.presentItem(key));
                }
            }
            fragment.appendChild(resizeElement);
        }
        return fragment;
    };
    UIResizeBar.prototype.presentItem = function (key) {
        var itemElement = document.createElement("div");
        itemElement.setAttribute("data-window-id", this.window.id);
        ElementHelper.addClasses(itemElement, this.app.prefix, "resize-item-" + key);
        new WindowResizeDragEvent_1.default(this.app, this.window, itemElement, key);
        return itemElement;
    };
    UIResizeBar.prototype.bindEvent = function (resizeBarElement) {
        resizeBarElement.addEventListener("contextmenu", function (ev) {
            ev.preventDefault();
            ev.stopPropagation();
            ev.returnValue = false;
            return false;
        });
    };
    UIResizeBar.prototype.leastOneTrue = function () {
        var isExist = false;
        for (var _i = 0, _a = this.directions; _i < _a.length; _i++) {
            var key = _a[_i];
            if (this[StringHelper.getCamelCase(key)] === true) {
                isExist = true;
                break;
            }
        }
        return isExist;
    };
    return UIResizeBar;
}(UIWindowComponent_1.default));
exports.default = UIResizeBar;


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var DragEvent_1 = __webpack_require__(11);
var ElementHelper = __webpack_require__(2);
var WindowResizeDragEvent = (function (_super) {
    __extends(WindowResizeDragEvent, _super);
    function WindowResizeDragEvent(app, window, dragElement, direction) {
        var _this = _super.call(this, dragElement) || this;
        _this.app = app;
        _this.window = window;
        _this.direction = direction;
        _this.isShowMoreActionButton = false;
        _this._top = 0;
        _this._left = 0;
        _this._width = 0;
        _this._height = 0;
        _this.content = null;
        return _this;
    }
    WindowResizeDragEvent.prototype.dragStart = function (ev, x, y) {
        if (this.window.status !== "normal") {
            return false;
        }
        this._top = this.window.top;
        this._left = this.window.left;
        this._width = this.window.width;
        this._height = this.window.height;
    };
    WindowResizeDragEvent.prototype.dragging = function (ev, x, y, distanceX, distanceY) {
        switch (this.direction) {
            case "left":
                this.resizeHandler(distanceX, distanceY, false, true, false, true);
                break;
            case "right":
                this.resizeHandler(distanceX, distanceY, false, false, false, true);
                break;
            case "top":
                this.resizeHandler(distanceX, distanceY, true, false, true, false);
                break;
            case "bottom":
                this.resizeHandler(distanceX, distanceY, false, false, true, false);
                break;
            case "left-top":
                this.resizeHandler(distanceX, distanceY, true, true, false, false);
                break;
            case "right-top":
                this.resizeHandler(distanceX, distanceY, true, false, false, false);
                break;
            case "left-bottom":
                this.resizeHandler(distanceX, distanceY, false, true, false, false);
                break;
            case "right-bottom":
                this.resizeHandler(distanceX, distanceY, false, false, false, false);
                break;
        }
    };
    WindowResizeDragEvent.prototype.dragEnd = function (ev) {
        this.window.top = this._top;
        this.window.left = this._left;
        this.window.width = this._width;
        this.window.height = this._height;
        if (this.window.storeStatus) {
            this.window.lastStoreStatus = {
                top: this.window.top,
                left: this.window.left,
                width: this.window.width,
                height: this.window.height
            };
        }
        this.app.drayLayer.hide();
        if (this.content)
            this.content.showPenetrate(false);
    };
    WindowResizeDragEvent.prototype.resizeHandler = function (distanceX, distanceY, isTop, isLeft, lockX, lockY) {
        var top = this.window.top + distanceY;
        var left = this.window.left + distanceX;
        var width = isLeft ? this.window.width - distanceX : this.window.width + distanceX;
        var height = isTop ? this.window.height - distanceY : this.window.height + distanceY;
        width = Math.max(width, this.window.minWidth);
        if (isLeft) {
            left = Math.min(left, this.window.left + this.window.width - this.window.minWidth);
            left = Math.max(0, left);
            width = Math.min(width, this.window.left + this.window.width);
        }
        else {
            left = Math.min(left, this.window.left);
            left = Math.max(this.window.left, left);
            width = Math.min(width, innerWidth - this.window.left);
        }
        width = Math.min(width, this.window.maxWidth);
        height = Math.max(height, this.window.minHeight);
        if (isTop) {
            top = Math.min(top, this.window.top + this.window.height - this.window.minHeight);
            top = Math.max(0, top);
            height = Math.min(height, this.window.top + this.window.height);
        }
        else {
            top = Math.min(top, this.window.top);
            top = Math.max(this.window.top, top);
            height = Math.min(height, innerHeight - this.window.top);
        }
        height = Math.min(height, this.window.maxHeight);
        if (lockX) {
            this._top = top;
            this._height = height;
            ElementHelper.addStyles(this.window.element, {
                top: top + "px",
                height: height + "px"
            });
        }
        if (lockY) {
            this._width = width;
            this._left = left;
            ElementHelper.addStyles(this.window.element, {
                width: width + "px",
                left: left + "px"
            });
            this.updateActionButton(width);
        }
        if (lockY === false && lockX === false) {
            this._top = top;
            this._left = left;
            this._width = width;
            this._height = height;
            ElementHelper.addStyles(this.window.element, {
                top: top + "px",
                left: left + "px",
                height: height + "px",
                width: width + "px"
            });
        }
        this.updateActionButton(lockX ? this.window.width : width);
    };
    WindowResizeDragEvent.prototype.updateActionButton = function (width) {
        if (width <= 300) {
            if (this.isShowMoreActionButton !== false)
                return;
            this.isShowMoreActionButton = true;
            this.window.zoomActionButtons(width);
        }
        else {
            if (this.isShowMoreActionButton !== true)
                return;
            this.isShowMoreActionButton = false;
            this.window.zoomActionButtons(width);
        }
    };
    WindowResizeDragEvent.prototype.mouseStar = function (ev) {
        this.app.drayLayer.updateZIndex(this.window.zIndex - 1);
        this.content = this.window.getComponent("content-container");
        if (this.content)
            this.content.showPenetrate();
    };
    WindowResizeDragEvent.prototype.mouseMove = function (ev) {
        ev.preventDefault();
    };
    WindowResizeDragEvent.prototype.mouseEnd = function (ev) {
    };
    return WindowResizeDragEvent;
}(DragEvent_1.default));
exports.default = WindowResizeDragEvent;


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIWindowComponent_1 = __webpack_require__(4);
var WindowMoveDragEvent_1 = __webpack_require__(23);
var UIActionBar_1 = __webpack_require__(24);
var UITitleBar_1 = __webpack_require__(26);
var UITabBar_1 = __webpack_require__(27);
var ElementHelper = __webpack_require__(2);
var CastHelper = __webpack_require__(3);
var UIToolBar = (function (_super) {
    __extends(UIToolBar, _super);
    function UIToolBar(app, window, options) {
        var _this = _super.call(this, app, window) || this;
        _this.elementId = _this.window.elementId + "-" + "tool-bar";
        _this.height = 30;
        _this.drag = {
            vertical: true,
            horizontal: true,
            breakLeft: true,
            breakRight: true,
            breakTop: true,
            breakBottom: true
        };
        _this.titleBar = {};
        _this.tabBar = {};
        _this.actionBar = {};
        _this.background = "#ffffff";
        _this._element = null;
        _this.height = CastHelper.numberCast(options.height, _this.height);
        _this.drag = CastHelper.jsonOrBooleanCast(options.drag, _this.drag);
        _this.titleBar = CastHelper.jsonOrBooleanCast(options.titleBar, _this.titleBar);
        _this.tabBar = CastHelper.jsonOrBooleanCast(options.tabBar, _this.tabBar);
        _this.actionBar = CastHelper.jsonOrBooleanCast(options.actionBar, _this.actionBar);
        _this.background = CastHelper.stringOrBooleanStyleCast(options.background, _this.background);
        return _this;
    }
    Object.defineProperty(UIToolBar.prototype, "element", {
        get: function () {
            return document.getElementById("" + this.elementId);
        },
        enumerable: true,
        configurable: true
    });
    UIToolBar.prototype.present = function () {
        var _this = this;
        var fragment = ElementHelper.createFragment();
        var toolBarElement = ElementHelper.createElement("div");
        toolBarElement.setAttribute("data-window-id", this.window.id);
        toolBarElement.id = this.elementId;
        ElementHelper.addClasses(toolBarElement, this.app.prefix, "tool-bar", "flexbox", "flex-row");
        ElementHelper.addStyles(toolBarElement, {
            height: this.height + "px",
            background: this.background
        });
        toolBarElement.addEventListener("dblclick", function (ev) {
            if (_this.window.status === "max") {
                _this.window.normal();
                return;
            }
            if (_this.window.status === "normal") {
                _this.window.max();
                return;
            }
        });
        if (this.titleBar !== false) {
            var titleBar = new UITitleBar_1.default(this.app, this.window, this.titleBar);
            var titleBarElement = titleBar.present();
            toolBarElement.appendChild(titleBarElement);
            this.setComponent("title-bar", titleBar);
        }
        if (this.tabBar !== false) {
            var tabBar = new UITabBar_1.default(this.app, this.window, this.tabBar);
            var tabBarElement = tabBar.present();
            toolBarElement.appendChild(tabBarElement);
            this.setComponent("tab-bar", tabBar);
        }
        if (this.actionBar !== false) {
            var actionBar = new UIActionBar_1.default(this.app, this.window, this.actionBar);
            var actionBarElement = actionBar.present();
            actionBarElement && toolBarElement.appendChild(actionBarElement);
            this.setComponent("action-bar", actionBar);
        }
        if (this.drag && (this.drag.vertical === true || this.drag.horizontal === true)) {
            new WindowMoveDragEvent_1.default(this.app, this.window, toolBarElement, this.drag);
        }
        fragment.appendChild(toolBarElement);
        return fragment;
    };
    return UIToolBar;
}(UIWindowComponent_1.default));
exports.default = UIToolBar;


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var DragEvent_1 = __webpack_require__(11);
var ElementHelper = __webpack_require__(2);
var WindowMoveDragEvent = (function (_super) {
    __extends(WindowMoveDragEvent, _super);
    function WindowMoveDragEvent(app, window, dragElement, dragMoveOptions) {
        var _this = _super.call(this, dragElement) || this;
        _this.app = app;
        _this.window = window;
        _this.dragMoveOptions = dragMoveOptions;
        _this.emerge = 10;
        _this._top = 0;
        _this._left = 0;
        _this._originTop = 0;
        _this._originLeft = 0;
        _this._lastTime = null;
        _this.content = null;
        return _this;
    }
    WindowMoveDragEvent.prototype.dragStart = function (ev, x, y) {
        this._top = this.window.top;
        this._left = this.window.left;
    };
    WindowMoveDragEvent.prototype.dragging = function (ev, x, y, distanceX, distanceY) {
        this.moveHandler(distanceX, distanceY);
    };
    WindowMoveDragEvent.prototype.dragEnd = function (ev) {
        if (this.isDragging == true && this._top === 0) {
            this.window.max();
            this.window.top = this._originTop;
            this.window.left = this._originLeft;
            return;
        }
        this.window.top = this._top;
        this.window.left = this._left;
        if (this.window.storeStatus) {
            this.window.lastStoreStatus = {
                top: this.window.top,
                left: this.window.left,
                width: this.window.width,
                height: this.window.height
            };
        }
        this.app.drayLayer.hide();
        if (this.content)
            this.content.showPenetrate(false);
    };
    WindowMoveDragEvent.prototype.moveHandler = function (distanceX, distanceY) {
        var top = this.window.top;
        var left = this.window.left;
        if (this.dragMoveOptions.vertical) {
            top = top + distanceY;
            top = Math.max(0, top);
            top = this.dragMoveOptions.breakBottom ? Math.min(innerHeight - this.emerge, top) : Math.min(innerHeight - this.window.height, top);
            this._top = top;
        }
        if (this.dragMoveOptions.horizontal) {
            left = left + distanceX;
            left = this.dragMoveOptions.breakLeft ? Math.max(this.emerge - this.window.width, left) : Math.max(0, left);
            left = this.dragMoveOptions.breakRight ? Math.min(innerWidth - this.emerge, left) : Math.min(innerWidth - this.window.width, left);
            this._left = left;
        }
        ElementHelper.addStyles(this.window.element, {
            top: top + "px",
            left: left + "px"
        });
    };
    WindowMoveDragEvent.prototype.draggingFirst = function (ev, x, y, distanceX, distanceY) {
        this._originTop = this.window.top;
        this._originLeft = this.window.left;
        if (this.window.status === "max") {
            if (x < this.window.width / 2) {
                this._left = 0;
            }
            else if (x > this.window.width / 2 && x < innerWidth - this.window.width) {
                this._left = x - this.window.width / 2;
            }
            else if (innerWidth - x < this.window.width / 2) {
                this._left = innerWidth - this.window.width;
            }
            else if (innerWidth - x > this.window.width / 2 && x >= innerWidth - this.window.width) {
                this._left = x - this.window.width / 2;
            }
            this.window.top = distanceY;
            this.window.left = this._left;
            this.window.normal(true);
        }
    };
    WindowMoveDragEvent.prototype.mouseStar = function (ev) {
        this.app.drayLayer.updateZIndex(this.window.zIndex - 1);
        this.content = this.window.getComponent("content-container");
        if (this.content)
            this.content.showPenetrate();
    };
    WindowMoveDragEvent.prototype.mouseMove = function (ev) {
        ev.preventDefault();
    };
    WindowMoveDragEvent.prototype.mouseEnd = function (ev) {
    };
    return WindowMoveDragEvent;
}(DragEvent_1.default));
exports.default = WindowMoveDragEvent;


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIWindowComponent_1 = __webpack_require__(4);
var UIContextMenuBar_1 = __webpack_require__(10);
var UIActionButton_1 = __webpack_require__(13);
var ElementHelper = __webpack_require__(2);
var CastHelper = __webpack_require__(3);
var UIActionBar = (function (_super) {
    __extends(UIActionBar, _super);
    function UIActionBar(app, window, options) {
        var _this = _super.call(this, app, window) || this;
        _this.elementId = _this.window.elementId + "-" + "action-bar";
        _this.enable = true;
        _this.items = [
            UIActionButton_1.default.refresh,
            UIActionButton_1.default.min,
            UIActionButton_1.default.max,
            UIActionButton_1.default.destroy
        ];
        _this._element = null;
        _this.enable = CastHelper.booleanCast(options.enable, _this.enable);
        _this.items = CastHelper.actionButtonsCast(options.actionButtons, _this.items);
        return _this;
    }
    Object.defineProperty(UIActionBar.prototype, "element", {
        get: function () {
            return document.getElementById("" + this.elementId);
        },
        enumerable: true,
        configurable: true
    });
    UIActionBar.prototype.present = function () {
        var fragment = ElementHelper.createFragment();
        if (this.enable === true) {
            var actionBarElement = ElementHelper.createElement("div");
            actionBarElement.setAttribute("data-window-id", this.window.id);
            actionBarElement.id = this.elementId;
            ElementHelper.addClasses(actionBarElement, this.app.prefix, "action-bar", "flexbox", "flex-row");
            actionBarElement.addEventListener("mousedown", function (ev) {
                ev.preventDefault();
                ev.stopPropagation();
            });
            actionBarElement.addEventListener("contextmenu", function (ev) {
                ev.preventDefault();
                ev.stopPropagation();
                ev.returnValue = false;
                return false;
            }, true);
            this.createActionButtons(actionBarElement);
            fragment.appendChild(actionBarElement);
        }
        return fragment;
    };
    UIActionBar.prototype.zoomActionButtons = function (windowWidth) {
        if (this.items === false)
            return;
        var isMerge = windowWidth <= UIActionBar.actionButtonZoomWidth ? true : false;
        var actionButtons = this.getComponent("action-buttons");
        if (!actionButtons)
            return;
        var _a = actionButtons.slice().reverse(), lastActionButton = _a[0], frontActionButtons = _a.slice(1);
        var moreContextMenuButtons = Array();
        frontActionButtons = frontActionButtons.reverse();
        for (var _i = 0, frontActionButtons_1 = frontActionButtons; _i < frontActionButtons_1.length; _i++) {
            var item = frontActionButtons_1[_i];
            isMerge
                ? ElementHelper.addClasses(item.element, this.app.prefix, "action-button-hidden")
                : ElementHelper.removeClasses(item.element, this.app.prefix, "action-button-hidden");
            moreContextMenuButtons.push(item);
        }
        var moreActionButton = new UIActionButton_1.default(this.app, this.window, UIActionButton_1.default.more);
        if (isMerge) {
            if (!moreActionButton.element) {
                var moreContextMenuBar_1 = new UIContextMenuBar_1.default(this.app, this.window, "more-action", moreContextMenuButtons);
                var moreContextMenuBarElement = moreContextMenuBar_1.present();
                document.body.appendChild(moreContextMenuBarElement);
                moreActionButton.handler = function (ev, window) {
                    moreContextMenuBar_1.updateOffset(ev, this.window.zIndex + 1);
                };
                var moreActionButtonElement = moreActionButton.present();
                moreActionButtonElement.firstElementChild
                    && lastActionButton.element.insertAdjacentElement('beforebegin', moreActionButtonElement.firstElementChild);
                this.window.setComponent("more-action-context-menu-bar", moreContextMenuBar_1);
            }
        }
        else {
            if (moreActionButton.element) {
                this.window.removeMoreActionContextMenu();
                moreActionButton.element
                    && moreActionButton.element.parentElement.removeChild(moreActionButton.element);
                this.window.removeComponent("more-action-context-menu-bar");
            }
        }
    };
    UIActionBar.prototype.createActionButtons = function (parentActionBarElemnt) {
        if (this.items === false)
            return;
        var actionButtons = Array();
        for (var _i = 0, _a = this.items; _i < _a.length; _i++) {
            var item = _a[_i];
            var actionButton = new UIActionButton_1.default(this.app, this.window, item);
            var actionButtonElement = actionButton.present();
            parentActionBarElemnt.appendChild(actionButtonElement);
            actionButtons.push(actionButton);
        }
        this.setComponent("action-buttons", actionButtons);
    };
    UIActionBar.actionButtonZoomWidth = 300;
    return UIActionBar;
}(UIWindowComponent_1.default));
exports.default = UIActionBar;


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIWindowComponent_1 = __webpack_require__(4);
var UIContextMenuBar_1 = __webpack_require__(10);
var UIIcon_1 = __webpack_require__(7);
var ElementHelper = __webpack_require__(2);
var CastHelper = __webpack_require__(3);
var UIContextMenuButton = (function (_super) {
    __extends(UIContextMenuButton, _super);
    function UIContextMenuButton(app, window, options, index) {
        if (index === void 0) { index = 0; }
        var _this = _super.call(this, app, window) || this;
        _this.index = index;
        _this.id = CastHelper.stringCast(options.id);
        _this.label = CastHelper.stringCast(options.label);
        _this.handler = options.handler;
        _this.items = CastHelper.contextMenuButtonsCast(options.items);
        return _this;
    }
    UIContextMenuButton.prototype.present = function () {
        var _this = this;
        var fragment = ElementHelper.createFragment();
        var contextMenuButtonElement = ElementHelper.createElement("div");
        contextMenuButtonElement.setAttribute("data-window-id", this.window.id);
        contextMenuButtonElement.setAttribute("data-index", "" + this.index);
        ElementHelper.addClasses(contextMenuButtonElement, this.app.prefix, "context-menu-button", "flexbox", "flex-row");
        ElementHelper.addStyles(contextMenuButtonElement, {
            height: UIContextMenuButton.height + "px",
            lineHeight: UIContextMenuButton.height + "px"
        });
        contextMenuButtonElement.addEventListener("mousedown", function (ev) {
            ev.stopPropagation();
            if (ev.button === 0 && typeof _this.handler === "function") {
                _this.handler(ev, _this.window);
            }
        });
        var labelElement = ElementHelper.createElement("label");
        labelElement.setAttribute("data-window-id", this.window.id);
        labelElement.innerText = this.label;
        ElementHelper.addClasses(labelElement, this.app.prefix, "context-menu-button" + "-label", "flex-item");
        contextMenuButtonElement.appendChild(labelElement);
        if (this.items !== false) {
            var contextMenuBar_1 = new UIContextMenuBar_1.default(this.app, this.window, "" + this.id, this.items, false);
            var contextMenuBarElement = contextMenuBar_1.present();
            contextMenuButtonElement.appendChild(contextMenuBarElement);
            var childContextMenuBarElement_1 = labelElement.nextElementSibling;
            var waiting_1;
            contextMenuButtonElement.addEventListener("mouseenter", function (ev) {
                var handler = function () {
                    contextMenuBar_1.updateChildrenOffset(ev, childContextMenuBarElement_1, _this.index);
                };
                waiting_1 = setTimeout(handler, 200);
            });
            contextMenuButtonElement.addEventListener("mouseleave", function (ev) {
                clearTimeout(waiting_1);
                contextMenuBar_1.hideChildren(childContextMenuBarElement_1);
            });
            this.setComponent("context-menu-bar", contextMenuBar_1);
            var rightIconElement = ElementHelper.createElement("div");
            rightIconElement.setAttribute("data-window-id", this.window.id);
            ElementHelper.addClasses(rightIconElement, this.app.prefix, "context-menu-more", "flexbox", "flex-center");
            var icon = new UIIcon_1.default(this.app, "right");
            var iconElement = icon.present();
            rightIconElement.appendChild(iconElement);
            contextMenuButtonElement.appendChild(rightIconElement);
        }
        fragment.appendChild(contextMenuButtonElement);
        return fragment;
    };
    UIContextMenuButton.height = 30;
    return UIContextMenuButton;
}(UIWindowComponent_1.default));
exports.default = UIContextMenuButton;


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIWindowComponent_1 = __webpack_require__(4);
var UIIcon_1 = __webpack_require__(7);
var ElementHelper = __webpack_require__(2);
var CastHelper = __webpack_require__(3);
var UITitleBar = (function (_super) {
    __extends(UITitleBar, _super);
    function UITitleBar(app, window, options) {
        var _this = _super.call(this, app, window) || this;
        _this.elementId = _this.window.elementId + "-" + "title-bar";
        _this.icon = "icon";
        _this.title = undefined;
        _this.useSubTitle = false;
        _this._element = null;
        _this.icon = CastHelper.typeOrBooleanCast(options.icon, _this.icon);
        _this.title = options.title;
        _this.useSubTitle = CastHelper.booleanCast(options.useSubTitle, _this.useSubTitle);
        return _this;
    }
    Object.defineProperty(UITitleBar.prototype, "element", {
        get: function () {
            return document.getElementById("" + this.elementId);
        },
        enumerable: true,
        configurable: true
    });
    UITitleBar.prototype.present = function () {
        var _this = this;
        var fragment = ElementHelper.createFragment();
        var titleBarElement = ElementHelper.createElement("div");
        titleBarElement.setAttribute("data-window-id", this.window.id);
        titleBarElement.id = this.elementId;
        ElementHelper.addClasses(titleBarElement, this.app.prefix, "title-bar", "flexbox", "flex-row", "flex-vertical-center");
        if (this.icon) {
            var windowIconElement = ElementHelper.createElement("div");
            windowIconElement.setAttribute("data-window-id", this.window.id);
            ElementHelper.addClasses(windowIconElement, this.app.prefix, "window-icon", "flexbox", "flex-center");
            windowIconElement.addEventListener("dblclick", function (ev) {
                ev.stopPropagation();
                _this.window.destroy();
            });
            titleBarElement.appendChild(windowIconElement);
            var icon = new UIIcon_1.default(this.app, this.icon);
            var iconElement = icon.present();
            windowIconElement.appendChild(iconElement);
            this.setComponent("window-icon", icon);
        }
        if (this.title || this.useSubTitle) {
            var titleElement = ElementHelper.createElement("div");
            titleElement.setAttribute("data-window-id", this.window.id);
            ElementHelper.addClasses(titleElement, this.app.prefix, "window-title");
            var labelElement = document.createElement("label");
            labelElement.setAttribute("data-window-id", this.window.id);
            ElementHelper.addClasses(labelElement, this.app.prefix, "window-title-label");
            if (this.title) {
                labelElement.innerText = this.title;
                labelElement.setAttribute("title", this.title);
            }
            titleElement.appendChild(labelElement);
            titleBarElement.appendChild(titleElement);
        }
        fragment.appendChild(titleBarElement);
        return fragment;
    };
    UITitleBar.prototype.updateTitle = function (title) {
        var element = this.element;
        if (!element)
            return;
        var titleElement = element.querySelector("." + this.app.prefix + "window-title-label");
        if (!titleElement)
            return;
        titleElement.innerText = title;
        titleElement.setAttribute("title", title);
        if (this.app.salver && this.app.salver.element) {
            var salverButtonElement = this.app.salver.element.querySelector("." + this.app.prefix + "salver-button[data-window-id='" + this.window.id + "']");
            if (salverButtonElement) {
                salverButtonElement.setAttribute("title", title);
            }
        }
        this.title = title;
    };
    return UITitleBar;
}(UIWindowComponent_1.default));
exports.default = UITitleBar;


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIWindowComponent_1 = __webpack_require__(4);
var ElementHelper = __webpack_require__(2);
var UITabBar = (function (_super) {
    __extends(UITabBar, _super);
    function UITabBar(app, window, options) {
        var _this = _super.call(this, app, window) || this;
        _this.elementId = _this.window.elementId + "-" + "tab-bar";
        _this._element = null;
        return _this;
    }
    Object.defineProperty(UITabBar.prototype, "element", {
        get: function () {
            return document.getElementById("" + this.elementId);
        },
        enumerable: true,
        configurable: true
    });
    UITabBar.prototype.present = function () {
        var fragment = ElementHelper.createFragment();
        var tabBarElement = ElementHelper.createElement("div");
        tabBarElement.setAttribute("data-window-id", this.window.id);
        tabBarElement.id = this.elementId;
        ElementHelper.addClasses(tabBarElement, this.app.prefix, "tab-bar", "flexbox", "flex-item", "flex-row");
        fragment.appendChild(tabBarElement);
        return fragment;
    };
    return UITabBar;
}(UIWindowComponent_1.default));
exports.default = UITabBar;


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIWindowComponent_1 = __webpack_require__(4);
var UITopMenuButton_1 = __webpack_require__(29);
var ElementHelper = __webpack_require__(2);
var CastHelper = __webpack_require__(3);
var UITopMenuBar = (function (_super) {
    __extends(UITopMenuBar, _super);
    function UITopMenuBar(app, window, contextMenuItems) {
        var _this = _super.call(this, app, window) || this;
        _this.elementId = _this.window.elementId + "-" + "top-menu-bar";
        _this.isActive = false;
        _this.currentTopMenuContextBar = null;
        _this.currentTopMenuButtonElement = null;
        _this.contextMenuButtons = false;
        _this._element = null;
        _this.contextMenuButtons = CastHelper.contextMenuButtonsCast(contextMenuItems);
        return _this;
    }
    Object.defineProperty(UITopMenuBar.prototype, "element", {
        get: function () {
            return document.getElementById("" + this.elementId);
        },
        enumerable: true,
        configurable: true
    });
    UITopMenuBar.prototype.present = function () {
        var fragment = ElementHelper.createFragment();
        if (this.contextMenuButtons !== false && this.contextMenuButtons.length > 0) {
            var topMenuBarElement = ElementHelper.createElement("div");
            topMenuBarElement.setAttribute("data-window-id", this.window.id);
            topMenuBarElement.id = this.elementId;
            ElementHelper.addClasses(topMenuBarElement, this.app.prefix, "top-menu-bar");
            topMenuBarElement.addEventListener("contextmenu", function (ev) {
                ev.preventDefault();
                ev.stopPropagation();
                ev.returnValue = false;
                return false;
            }, true);
            this.createTopMenuButtons(topMenuBarElement);
            fragment.appendChild(topMenuBarElement);
        }
        return fragment;
    };
    UITopMenuBar.prototype.hide = function (ev) {
        if (this.currentTopMenuButtonElement) {
            ElementHelper.removeClasses(this.currentTopMenuButtonElement, this.app.prefix, "top-menu-button" + "-active");
        }
        if (this.currentTopMenuContextBar)
            this.currentTopMenuContextBar.hide();
        var target = ev.target;
        this.isActive = target.className.indexOf("" + (this.app.prefix + "top-menu-button")) > -1 && target.getAttribute("data-window-id") === this.window.id
            ? !this.isActive
            : false;
        this.currentTopMenuContextBar = null;
        this.currentTopMenuButtonElement = null;
    };
    UITopMenuBar.prototype.createTopMenuButtons = function (parentTopMenuBarElement) {
        if (this.contextMenuButtons === false)
            return;
        var topMenuButtons = Array();
        for (var _i = 0, _a = this.contextMenuButtons; _i < _a.length; _i++) {
            var item = _a[_i];
            var topMenuButton = new UITopMenuButton_1.default(this.app, this.window, this, item);
            var topMenuButtonElement = topMenuButton.present();
            parentTopMenuBarElement.appendChild(topMenuButtonElement);
            topMenuButtons.push(topMenuButton);
        }
        this.setComponent("top-menu-buttons", topMenuButtons);
    };
    return UITopMenuBar;
}(UIWindowComponent_1.default));
exports.default = UITopMenuBar;


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIWindowComponent_1 = __webpack_require__(4);
var UIContextMenuBar_1 = __webpack_require__(10);
var ElementHelper = __webpack_require__(2);
var CastHelper = __webpack_require__(3);
var UITopMenuButton = (function (_super) {
    __extends(UITopMenuButton, _super);
    function UITopMenuButton(app, window, topMenuBar, options) {
        var _this = _super.call(this, app, window) || this;
        _this.topMenuBar = topMenuBar;
        _this.id = CastHelper.stringCast(options.id);
        _this.label = CastHelper.stringCast(options.label);
        _this.handler = options.handler;
        _this.items = CastHelper.contextMenuButtonsCast(options.items);
        return _this;
    }
    UITopMenuButton.prototype.present = function () {
        var fragment = ElementHelper.createFragment();
        var topMenuButtonElement = ElementHelper.createElement("div");
        topMenuButtonElement.setAttribute("data-window-id", this.window.id);
        ElementHelper.addClasses(topMenuButtonElement, this.app.prefix, "top-menu-button");
        var labelElement = ElementHelper.createElement("label");
        labelElement.setAttribute("data-window-id", this.window.id);
        labelElement.innerText = this.label;
        ElementHelper.addClasses(labelElement, this.app.prefix, "top-menu-button" + "-label");
        topMenuButtonElement.appendChild(labelElement);
        if (this.items !== false) {
            var contextMenuBar = new UIContextMenuBar_1.default(this.app, this.window, "top-menu-" + this.id, this.items);
            var contextMenuBarElement = contextMenuBar.present();
            document.body.appendChild(contextMenuBarElement);
            this.setComponent("context-menu-bar", contextMenuBar);
        }
        this.bindEvent(topMenuButtonElement);
        fragment.appendChild(topMenuButtonElement);
        return fragment;
    };
    UITopMenuButton.prototype.bindEvent = function (element) {
        var _this = this;
        element.addEventListener("mousedown", function (ev) {
            if (_this.topMenuBar.currentTopMenuButtonElement) {
                ElementHelper.removeClasses(_this.topMenuBar.currentTopMenuButtonElement, _this.app.prefix, "top-menu-button" + "-active");
            }
            if (_this.topMenuBar.currentTopMenuContextBar) {
                _this.topMenuBar.currentTopMenuContextBar.hide();
            }
            var contextMenuBar = _this.getComponent("context-menu-bar");
            if (_this.topMenuBar.isActive) {
                ElementHelper.addClasses(element, _this.app.prefix, "top-menu-button" + "-active");
                if (contextMenuBar && contextMenuBar.element) {
                    var clientRect = element.getBoundingClientRect();
                    contextMenuBar.updateOffset(ev, _this.window.zIndex + 1, clientRect.left, clientRect.top + 25);
                }
            }
            else {
                ElementHelper.removeClasses(element, _this.app.prefix, "top-menu-button" + "-active");
                if (contextMenuBar) {
                    contextMenuBar.hide();
                }
            }
            _this.topMenuBar.currentTopMenuContextBar = contextMenuBar;
            _this.topMenuBar.currentTopMenuButtonElement = element;
        });
        element.addEventListener("mouseenter", function (ev) {
            if (_this.topMenuBar.isActive) {
                if (_this.topMenuBar.currentTopMenuButtonElement) {
                    ElementHelper.removeClasses(_this.topMenuBar.currentTopMenuButtonElement, _this.app.prefix, "top-menu-button" + "-active");
                }
                if (_this.topMenuBar.currentTopMenuContextBar) {
                    _this.topMenuBar.currentTopMenuContextBar.hide();
                }
                ElementHelper.addClasses(element, _this.app.prefix, "top-menu-button" + "-active");
                var contextMenuBar = _this.getComponent("context-menu-bar");
                if (contextMenuBar && contextMenuBar.element) {
                    var clientRect = element.getBoundingClientRect();
                    contextMenuBar.updateOffset(ev, _this.window.zIndex + 1, clientRect.left, clientRect.top + 25);
                }
                _this.topMenuBar.currentTopMenuContextBar = contextMenuBar;
                _this.topMenuBar.currentTopMenuButtonElement = element;
            }
        });
    };
    return UITopMenuButton;
}(UIWindowComponent_1.default));
exports.default = UITopMenuButton;


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIComponent_1 = __webpack_require__(6);
var UISalverButton_1 = __webpack_require__(31);
var ElementHelper = __webpack_require__(2);
var UISalverBar = (function (_super) {
    __extends(UISalverBar, _super);
    function UISalverBar(app) {
        var _this = _super.call(this, app) || this;
        _this.elementId = "" + (_this.app.prefix + "salver-bar");
        _this.parsecloseCount = 0;
        _this._element = null;
        _this._items = [];
        return _this;
    }
    Object.defineProperty(UISalverBar.prototype, "element", {
        get: function () {
            return document.getElementById("" + this.elementId);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UISalverBar.prototype, "items", {
        get: function () {
            return this._items;
        },
        set: function (value) {
            this._items = value;
        },
        enumerable: true,
        configurable: true
    });
    UISalverBar.prototype.present = function () {
        var fragment = ElementHelper.createFragment();
        var salverBarElement = ElementHelper.createElement("div");
        salverBarElement.id = this.elementId;
        ElementHelper.addClasses(salverBarElement, this.app.prefix, "salver-bar", "animate-d3s", "flexbox", "flex-row");
        ElementHelper.addStyles(salverBarElement, {
            zIndex: "" + this.app.salverZIndex,
            height: UISalverButton_1.default.size + "px",
            bottom: "-" + (UISalverButton_1.default.size - UISalverButton_1.default.talentHeight) + "px"
        });
        fragment.appendChild(salverBarElement);
        return fragment;
    };
    UISalverBar.prototype.addOrUpdateItem = function () {
        var salverElement = this.element;
        if (!this.app.window || !salverElement)
            return;
        var lastWindow = this.app.lastWindow;
        if (lastWindow) {
            var lastSalverButton = new UISalverButton_1.default(this.app, lastWindow.id);
            ElementHelper.removeClasses(lastSalverButton.element, this.app.prefix, "salver-button-active");
        }
        var windowId = this.app.window.id;
        var salverButton = new UISalverButton_1.default(this.app, windowId);
        if (this.items.indexOf(windowId) === -1) {
            var salverButtonElement = salverButton.present();
            salverElement.appendChild(salverButtonElement);
            this.items.push(windowId);
            this.updateOffset();
        }
        else {
            ElementHelper.addClasses(salverButton.element, this.app.prefix, "salver-button-active");
        }
    };
    UISalverBar.prototype.removeItem = function () {
        var salverElement = this.element;
        if (!this.app.window || !salverElement)
            return;
        var windowId = this.app.window.id;
        var salverButton = new UISalverButton_1.default(this.app, windowId);
        ElementHelper.removeElement(salverButton.element);
        var index = this.items.indexOf(windowId);
        this.items.splice(index, 1);
        this.updateOffset();
    };
    UISalverBar.prototype.updateOffset = function () {
        var salverElement = this.element;
        if (!salverElement)
            return;
        var itemsWidth = this.items.length * UISalverButton_1.default.size;
        ElementHelper.addStyles(salverElement, {
            left: (innerWidth - itemsWidth) / 2 + "px"
        });
    };
    UISalverBar.prototype.show = function (isVisible) {
        if (isVisible === void 0) { isVisible = true; }
        if (isVisible) {
            ElementHelper.removeClasses(this.element, this.app.prefix, "animate-salver-slide-down");
            ElementHelper.addClasses(this.element, this.app.prefix, "animate-salver-slide-up", "salver-bar-keep");
        }
        else {
            ElementHelper.removeClasses(this.element, this.app.prefix, "animate-salver-slide-up", "salver-bar-keep");
            ElementHelper.addClasses(this.element, this.app.prefix, "animate-salver-slide-down");
        }
    };
    return UISalverBar;
}(UIComponent_1.default));
exports.default = UISalverBar;


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIComponent_1 = __webpack_require__(6);
var UIIcon_1 = __webpack_require__(7);
var ElementHelper = __webpack_require__(2);
var CastHelper = __webpack_require__(3);
var UISalverButton = (function (_super) {
    __extends(UISalverButton, _super);
    function UISalverButton(app, windowId) {
        var _this = _super.call(this, app) || this;
        _this._element = null;
        _this.windowId = CastHelper.stringCast(windowId);
        _this.elementId = _this.app.prefix + windowId + "-" + "salver-button";
        return _this;
    }
    Object.defineProperty(UISalverButton.prototype, "element", {
        get: function () {
            return document.getElementById("" + this.elementId);
        },
        enumerable: true,
        configurable: true
    });
    UISalverButton.prototype.present = function () {
        var _this = this;
        var fragment = ElementHelper.createFragment();
        var salverButtonElement = ElementHelper.createElement("div");
        salverButtonElement.id = this.elementId;
        salverButtonElement.setAttribute("data-window-id", this.windowId);
        ElementHelper.addClasses(salverButtonElement, this.app.prefix, "salver-button", "flexbox", "flex-center", "salver-button" + "-active");
        ElementHelper.addStyles(salverButtonElement, {
            width: UISalverButton.size + "px",
            height: UISalverButton.size + "px"
        });
        var window = this.app.getWindow(this.windowId);
        salverButtonElement.addEventListener("mousedown", function (ev) {
            if (!window)
                return;
            if (!_this.app.salver || !_this.app.salver.element)
                return;
            if (_this.app.salver.parsecloseCount > 0) {
            }
            else {
                if (window === _this.app.window && window.status !== "min") {
                    window.min();
                }
                else {
                    window.updateZIndex();
                }
            }
        });
        var titleBar = window.getComponent("\n            " + "tool-bar" + "\n            /" + "title-bar");
        var defaultTitle = "未命名标题";
        var defaultIcon = new UIIcon_1.default(this.app, "icon");
        if (titleBar) {
            defaultTitle = titleBar.title || defaultTitle;
            var windowIcon = titleBar.getComponent("" + "window-icon");
            if (windowIcon)
                defaultIcon = windowIcon;
        }
        salverButtonElement.setAttribute("title", defaultTitle);
        salverButtonElement.appendChild(defaultIcon.present());
        fragment.appendChild(salverButtonElement);
        return fragment;
    };
    UISalverButton.size = 50;
    UISalverButton.talentHeight = 5;
    return UISalverButton;
}(UIComponent_1.default));
exports.default = UISalverButton;


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIWindowComponent_1 = __webpack_require__(4);
var UIHtmlContent_1 = __webpack_require__(33);
var UIFrameContent_1 = __webpack_require__(34);
var ElementHelper = __webpack_require__(2);
var CastHelper = __webpack_require__(3);
var UIContent = (function (_super) {
    __extends(UIContent, _super);
    function UIContent(app, window, options) {
        var _this = _super.call(this, app, window) || this;
        _this.elementId = _this.window.elementId + "-" + "content-container";
        _this.type = "html";
        _this.value = "";
        _this._element = null;
        _this._penetrateElement = null;
        _this.type = CastHelper.contentTypeCast(options.type, _this.type);
        _this.value = CastHelper.stringOrElementCast(options.value);
        return _this;
    }
    Object.defineProperty(UIContent.prototype, "element", {
        get: function () {
            return document.getElementById("" + this.elementId);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIContent.prototype, "penetrateElement", {
        get: function () {
            var element = this.element;
            if (!element)
                return null;
            return element.querySelector("." + (this.app.prefix + "content-penetrate"));
        },
        enumerable: true,
        configurable: true
    });
    UIContent.prototype.present = function () {
        var fragment = ElementHelper.createFragment();
        var contentElement = ElementHelper.createElement("div");
        contentElement.setAttribute("data-window-id", this.window.id);
        contentElement.id = this.elementId;
        ElementHelper.addClasses(contentElement, this.app.prefix, "content-container", "flex-item");
        ElementHelper.addClasses(contentElement, this.app.prefix, "content-container");
        var penetrateElement = ElementHelper.createElement("div");
        ElementHelper.addClasses(penetrateElement, this.app.prefix, "content-penetrate");
        contentElement.appendChild(penetrateElement);
        switch (this.type) {
            case "html":
                var htmlContent = new UIHtmlContent_1.default(this.app, this.window, this.value);
                var htmlElement = htmlContent.present();
                contentElement.appendChild(htmlElement);
                this.setComponent("content", htmlContent);
                break;
            case "local-url":
                var frameContent = new UIFrameContent_1.default(this.app, this.window, this.value);
                var frameContentElement = frameContent.present();
                contentElement.appendChild(frameContentElement);
                this.setComponent("content", frameContent);
                break;
        }
        fragment.appendChild(contentElement);
        return fragment;
    };
    UIContent.prototype.showPenetrate = function (isShow) {
        if (isShow === void 0) { isShow = true; }
        if (isShow) {
            ElementHelper.addClasses(this.penetrateElement, this.app.prefix, "content-penetrate" + "-active");
        }
        else {
            ElementHelper.removeClasses(this.penetrateElement, this.app.prefix, "content-penetrate" + "-active");
        }
    };
    UIContent.prototype.refreshContent = function () {
        if (this.type === "local-url") {
            var frameContent = this.window.getComponent("\n            " + "content-container" + "\n            /" + "content");
            if (frameContent && frameContent.contentWindow) {
                frameContent.contentWindow.location.reload();
            }
        }
    };
    return UIContent;
}(UIWindowComponent_1.default));
exports.default = UIContent;


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIWindowComponent_1 = __webpack_require__(4);
var ElementHelper = __webpack_require__(2);
var TypeHelper = __webpack_require__(5);
var UIHtmlContent = (function (_super) {
    __extends(UIHtmlContent, _super);
    function UIHtmlContent(app, window, content) {
        var _this = _super.call(this, app, window) || this;
        _this.content = content;
        return _this;
    }
    UIHtmlContent.prototype.present = function () {
        var fragment = ElementHelper.createFragment();
        var htmlContentElement = ElementHelper.createElement("div");
        ElementHelper.addClasses(htmlContentElement, this.app.prefix, "html-content");
        if (TypeHelper.isElement(this.content)) {
            var newElement = this.content.cloneNode(true);
            ElementHelper.addStyles(newElement, {
                display: 'inherit'
            });
            htmlContentElement.appendChild(newElement);
        }
        else
            htmlContentElement.innerHTML = this.content;
        fragment.appendChild(htmlContentElement);
        return fragment;
    };
    return UIHtmlContent;
}(UIWindowComponent_1.default));
exports.default = UIHtmlContent;


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIWindowComponent_1 = __webpack_require__(4);
var ElementHelper = __webpack_require__(2);
var CastHelper = __webpack_require__(3);
var TypeHelper = __webpack_require__(5);
var EventHelper = __webpack_require__(12);
var UIFrameContent = (function (_super) {
    __extends(UIFrameContent, _super);
    function UIFrameContent(app, window, url) {
        var _this = _super.call(this, app, window) || this;
        _this.elementId = _this.window.elementId + "-" + "url-content";
        _this._element = null;
        _this._contentWindow = null;
        _this.mousedown = function (ev) {
            var event = document.createEvent('Event');
            event.initEvent("mousedown", true);
            _this.window.element.dispatchEvent(event);
        };
        _this.mousemove = function (ev) {
            var clientRect = _this.element.getBoundingClientRect();
            var pageY = (TypeHelper.isMoveEvent(ev) ? ev.pageY : ev.touches[0].pageY) + clientRect.top;
            if (_this.app.salver && _this.app.salver.element) {
                if (pageY >= parent.innerHeight - 50) {
                    if (ElementHelper.containClass(_this.app.salver.element, _this.app.prefix, "salver-bar-keep"))
                        return;
                    _this.app.salver.show();
                }
                else {
                    if (!ElementHelper.containClass(_this.app.salver.element, _this.app.prefix, "salver-bar-keep"))
                        return;
                    _this.app.salver.show(false);
                }
            }
        };
        _this.url = CastHelper.stringCast(url);
        return _this;
    }
    Object.defineProperty(UIFrameContent.prototype, "element", {
        get: function () {
            return document.getElementById("" + this.elementId);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UIFrameContent.prototype, "contentWindow", {
        get: function () {
            var frameElement = document.getElementById("" + this.elementId);
            if (!frameElement)
                return null;
            return frameElement.contentWindow;
        },
        enumerable: true,
        configurable: true
    });
    UIFrameContent.prototype.present = function () {
        var fragment = ElementHelper.createFragment();
        var frameContentElement = ElementHelper.createElement("iframe");
        frameContentElement.setAttribute("data-window-id", this.window.id);
        frameContentElement.id = this.elementId;
        frameContentElement.setAttribute("frameborder", "0");
        frameContentElement.setAttribute("scrolling", "no");
        frameContentElement.setAttribute("allowtransparency", "true");
        frameContentElement.src = this.url;
        ElementHelper.addClasses(frameContentElement, this.app.prefix, "url-content");
        this.bindEvent(frameContentElement);
        fragment.appendChild(frameContentElement);
        return fragment;
    };
    UIFrameContent.prototype.bindEvent = function (frameContentElement) {
        var _this = this;
        frameContentElement.addEventListener("load", function (ev) {
            var contentWindow = frameContentElement.contentWindow;
            if (!contentWindow)
                return;
            var titleBar = _this.window.getComponent("\n            " + "tool-bar" + "\n            /" + "title-bar");
            if (titleBar && titleBar.useSubTitle) {
                var subTitleElement = contentWindow.document.querySelector("title");
                if (subTitleElement) {
                    titleBar.updateTitle(subTitleElement.innerText || "未命名标题");
                }
            }
            if (_this.window.contextMenu !== false) {
                contentWindow.document.addEventListener("contextmenu", function (ev) {
                    ev.preventDefault();
                    ev.returnValue = false;
                    var event = document.createEvent('Event');
                    event.initEvent("contextmenu", true);
                    _this.window.element.dispatchEvent(event);
                    var clientRect = _this.element.getBoundingClientRect();
                    var contextMenuBar = _this.window.getComponent("" + "context-menu-bar");
                    contextMenuBar && contextMenuBar.updateOffset(ev, _this.window.zIndex + 1, ev.pageX + clientRect.left, ev.pageY + clientRect.top);
                    return false;
                });
            }
            contentWindow.document.addEventListener("mousedown", _this.mousedown);
            EventHelper.addTouchMoveEvent(contentWindow.document, _this.mousemove);
        });
    };
    return UIFrameContent;
}(UIWindowComponent_1.default));
exports.default = UIFrameContent;


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIWindowComponent_1 = __webpack_require__(4);
var ElementHelper = __webpack_require__(2);
var CastHelper = __webpack_require__(3);
var TypeHelper = __webpack_require__(5);
var UIStatuBar = (function (_super) {
    __extends(UIStatuBar, _super);
    function UIStatuBar(app, window, options) {
        var _this = _super.call(this, app, window) || this;
        _this.elementId = _this.window.elementId + "-" + "statu-bar";
        _this.height = 30;
        _this.background = "#e5e5e5";
        _this.content = "";
        _this._element = null;
        _this.height = CastHelper.numberCast(options.height, _this.height);
        _this.background = CastHelper.stringOrBooleanStyleCast(options.background, _this.background);
        _this.content = CastHelper.stringOrElementCast(options.content);
        return _this;
    }
    Object.defineProperty(UIStatuBar.prototype, "element", {
        get: function () {
            return document.getElementById("" + this.elementId);
        },
        enumerable: true,
        configurable: true
    });
    UIStatuBar.prototype.present = function () {
        var fragment = ElementHelper.createFragment();
        var statuBarElement = ElementHelper.createElement("div");
        statuBarElement.setAttribute("data-window-id", this.window.id);
        statuBarElement.id = this.elementId;
        ElementHelper.addClasses(statuBarElement, this.app.prefix, "statu-bar");
        ElementHelper.addStyles(statuBarElement, {
            height: this.height + "px",
            background: "" + this.background
        });
        if (TypeHelper.isElement(this.content)) {
            var newElement = this.content.cloneNode(true);
            ElementHelper.addStyles(newElement, {
                display: 'inherit'
            });
            statuBarElement.appendChild(newElement);
        }
        else
            statuBarElement.innerHTML = this.content;
        fragment.appendChild(statuBarElement);
        return fragment;
    };
    return UIStatuBar;
}(UIWindowComponent_1.default));
exports.default = UIStatuBar;


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIComponent_1 = __webpack_require__(6);
var UIIcon_1 = __webpack_require__(7);
var ElementHelper = __webpack_require__(2);
var CastHelper = __webpack_require__(3);
var TimeHelper = __webpack_require__(37);
var UINotice = (function (_super) {
    __extends(UINotice, _super);
    function UINotice(app, options) {
        var _this = _super.call(this, app) || this;
        _this.timer = 0;
        _this.fps = 10;
        _this.id = _this.app.noticeZIndex;
        _this.elementId = _this.app.prefix + "notice" + "-" + _this.id;
        _this.type = "info";
        _this.timeout = 3000;
        _this._element = null;
        _this._processElement = null;
        _this.type = CastHelper.noticeTypeCast(options.type, _this.type);
        _this.title = CastHelper.stringOrUndefinedCast(options.title);
        _this.message = CastHelper.stringCast(options.message);
        _this.timeout = CastHelper.numberCast(options.timeout, _this.timeout);
        return _this;
    }
    Object.defineProperty(UINotice.prototype, "element", {
        get: function () {
            return document.getElementById(this.elementId);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UINotice.prototype, "processElement", {
        get: function () {
            if (!this.element)
                return null;
            return this.element.querySelector("." + (this.app.prefix + "notice") + "-process");
        },
        enumerable: true,
        configurable: true
    });
    UINotice.prototype.present = function () {
        var fragment = ElementHelper.createFragment();
        var noticeElement = ElementHelper.createElement("div");
        noticeElement.id = this.elementId;
        ElementHelper.addClasses(noticeElement, this.app.prefix, "notice", "animate-d3s", "animate-fade-in-right");
        ElementHelper.addStyles(noticeElement, {
            zIndex: "" + this.id,
        });
        this.bindEvent(noticeElement);
        this.createClose(noticeElement);
        var noticeContainerElement = ElementHelper.createElement("div");
        ElementHelper.addClasses(noticeContainerElement, this.app.prefix, "notice" + "-container", "flexbox", "flex-row");
        var noticeIconElement = ElementHelper.createElement("div");
        ElementHelper.addClasses(noticeIconElement, this.app.prefix, "notice" + "-icon", "notice" + "-" + this.type);
        var icon = new UIIcon_1.default(this.app, "" + this.type);
        var iconElement = icon.present();
        noticeIconElement.appendChild(iconElement);
        noticeContainerElement.appendChild(noticeIconElement);
        var noticeMessageElement = ElementHelper.createElement("div");
        ElementHelper.addClasses(noticeMessageElement, this.app.prefix, "notice" + "-message", "flex-item");
        this.createTitle(noticeMessageElement);
        this.createContent(noticeMessageElement);
        noticeContainerElement.appendChild(noticeMessageElement);
        noticeElement.appendChild(noticeContainerElement);
        this.createNoticeTime(noticeElement);
        this.createProcess(noticeElement);
        fragment.appendChild(noticeElement);
        return fragment;
    };
    UINotice.prototype.createClose = function (noticeElement) {
        var _this = this;
        var closeElement = ElementHelper.createElement("div");
        ElementHelper.addClasses(closeElement, this.app.prefix, "notice" + "-close-button", "flexbox", "flex-center");
        var icon = new UIIcon_1.default(this.app, 'destroy');
        var iconElement = icon.present();
        closeElement.appendChild(iconElement);
        closeElement.addEventListener("mousedown", function (ev) {
            _this.destroy();
        });
        noticeElement.appendChild(closeElement);
    };
    UINotice.prototype.createTitle = function (noticeElement) {
        if (this.title !== undefined) {
            var titleElement = ElementHelper.createElement("div");
            ElementHelper.addClasses(titleElement, this.app.prefix, "notice" + "-title", "notice" + "-" + this.type);
            titleElement.innerText = this.title;
            noticeElement.appendChild(titleElement);
        }
    };
    UINotice.prototype.createContent = function (noticeElement) {
        var contentELement = ElementHelper.createElement("div");
        ElementHelper.addClasses(contentELement, this.app.prefix, "notice" + "-content");
        contentELement.innerText = this.message;
        noticeElement.appendChild(contentELement);
    };
    UINotice.prototype.createNoticeTime = function (noticeElement) {
        var timeElement = ElementHelper.createElement("div");
        ElementHelper.addClasses(timeElement, this.app.prefix, "notice" + "-time");
        timeElement.innerText = "" + TimeHelper.getDatetime();
        noticeElement.appendChild(timeElement);
    };
    UINotice.prototype.createProcess = function (noticeElement) {
        var processElement = ElementHelper.createElement("div");
        ElementHelper.addClasses(processElement, this.app.prefix, "notice" + "-process");
        noticeElement.appendChild(processElement);
    };
    UINotice.prototype.calcTopOffset = function (index) {
        if (index === void 0) { index = undefined; }
        var currentTop = UINotice.topOffset;
        if (this.app.notices.length > 0) {
            var step = (index === undefined ? this.app.notices.length : index) - 1;
            var lastNotice = this.app.notices[step];
            var lastNoticeElement = lastNotice.element;
            var clientRect = lastNoticeElement.getBoundingClientRect();
            currentTop = clientRect.top + clientRect.height + UINotice.space;
        }
        return currentTop;
    };
    UINotice.prototype.bindEvent = function (noticeElement) {
        var _this = this;
        noticeElement.addEventListener("animationend", function (ev) {
            var element = _this.element;
            if (ElementHelper.containClass(element, _this.app.prefix, "animate-fade-in-right-reverse")) {
                _this.remove();
            }
            if (_this.timeout !== 0) {
                if (ElementHelper.containClass(element, _this.app.prefix, "animate-fade-in-right")) {
                    _this.processAnimate();
                }
            }
            ElementHelper.removeClasses(element, _this.app.prefix, "animate-fade-in-right-reverse", "animate-fade-in-right", "animate-slide-to-top");
        });
        if (this.timeout !== 0) {
            noticeElement.addEventListener("mouseenter", function (ev) {
                clearInterval(_this.timer);
            });
            noticeElement.addEventListener("mouseleave", function (ev) {
                _this.processAnimate();
            });
        }
    };
    UINotice.prototype.destroy = function () {
        ElementHelper.addClasses(this.element, this.app.prefix, "animate-fade-in-right-reverse");
    };
    UINotice.prototype.remove = function () {
        var index = this.app.notices.indexOf(this);
        this.app.notices.splice(index, 1);
        ElementHelper.removeElement(this.element);
        this.updateOffset(index);
    };
    UINotice.prototype.processAnimate = function () {
        var _this = this;
        var handler = function () {
            if (_this.fps <= _this.timeout) {
                ElementHelper.addStyles(_this.processElement, {
                    width: (_this.fps / _this.timeout) * 100 + "%"
                });
            }
            else {
                clearInterval(_this.timer);
                _this.destroy();
            }
            _this.fps += 10;
        };
        this.timer = setInterval(handler, 10);
    };
    UINotice.prototype.updateOffset = function (index, isCreate) {
        if (isCreate === void 0) { isCreate = false; }
        var notices = this.app.notices;
        for (var i = index; i < notices.length; i++) {
            ElementHelper.addStyles(notices[i].element, {
                top: (i === 0 ? UINotice.topOffset : this.calcTopOffset(i)) + "px"
            });
            if (!isCreate) {
                ElementHelper.addClasses(this.element, this.app.prefix, "animate-slide-to-top");
            }
        }
    };
    UINotice.topOffset = 24;
    UINotice.space = 10;
    return UINotice;
}(UIComponent_1.default));
exports.default = UINotice;


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var StringHelper = __webpack_require__(9);
function getDatetime() {
    var date = new Date();
    var year = date.getFullYear();
    var month = StringHelper.mendZero("" + (date.getMonth() + 1), 2);
    var day = StringHelper.mendZero("" + date.getDate(), 2);
    var hour = StringHelper.mendZero("" + date.getHours(), 2);
    var minutes = StringHelper.mendZero("" + date.getMinutes(), 2);
    var seconds = StringHelper.mendZero("" + date.getSeconds(), 2);
    return year + "-" + month + "-" + day + " " + hour + ":" + minutes + ":" + seconds;
}
exports.getDatetime = getDatetime;


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var UIComponent_1 = __webpack_require__(6);
var ElementHelper = __webpack_require__(2);
var UIDragLayer = (function (_super) {
    __extends(UIDragLayer, _super);
    function UIDragLayer(app) {
        var _this = _super.call(this, app) || this;
        _this.elementId = "" + (_this.app.prefix + "drag-layer");
        _this._element = null;
        return _this;
    }
    Object.defineProperty(UIDragLayer.prototype, "element", {
        get: function () {
            return document.getElementById("" + this.elementId);
        },
        enumerable: true,
        configurable: true
    });
    UIDragLayer.prototype.present = function () {
        var fragment = ElementHelper.createFragment();
        var dragLayerElement = ElementHelper.createElement("div");
        dragLayerElement.id = this.elementId;
        ElementHelper.addClasses(dragLayerElement, this.app.prefix, "drag-layer");
        fragment.appendChild(dragLayerElement);
        return fragment;
    };
    UIDragLayer.prototype.updateZIndex = function (zIndex) {
        var element = this.element;
        ElementHelper.addClasses(element, this.app.prefix, "drag-layer" + "-active");
        ElementHelper.addStyles(element, {
            zIndex: "" + zIndex
        });
    };
    UIDragLayer.prototype.hide = function () {
        var element = this.element;
        ElementHelper.removeClasses(element, this.app.prefix, "drag-layer" + "-active");
    };
    return UIDragLayer;
}(UIComponent_1.default));
exports.default = UIDragLayer;


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(40);
__webpack_require__(41);
__webpack_require__(42);
__webpack_require__(43);
__webpack_require__(44);
__webpack_require__(45);
__webpack_require__(46);
__webpack_require__(47);
__webpack_require__(48);
__webpack_require__(49);
__webpack_require__(50);
__webpack_require__(51);
__webpack_require__(52);
__webpack_require__(53);
__webpack_require__(54);


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(56);
__webpack_require__(57);
__webpack_require__(58);
__webpack_require__(59);
__webpack_require__(60);
__webpack_require__(61);
__webpack_require__(62);
__webpack_require__(63);
__webpack_require__(64);
__webpack_require__(65);
__webpack_require__(66);
__webpack_require__(67);
__webpack_require__(68);
__webpack_require__(69);


/***/ }),
/* 56 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "destroy",
  "use": "destroy-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"destroy\"><defs><style type=\"text/css\"></style></defs><path d=\"M933.89254819 139.71606348L884.23129279 90.08990363 511.96490363 462.39138834 140.40044113 90.82692583 90.84447403 140.34779656 462.40893653 511.91225907 90.10745181 884.2137446 139.73361166 933.875 512.03509637 561.53841892 883.59955887 933.10288141 933.15552597 883.58201068 561.59106347 512.01754819Z\" p-id=\"4833\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 57 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "min",
  "use": "min-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"min\"><defs><style type=\"text/css\"></style></defs><path d=\"M65.23884 456.152041 958.760137 456.152041l0 111.695918L65.23884 567.847959 65.23884 456.152041z\" p-id=\"4222\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 58 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "max",
  "use": "max-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"max\"><defs><style type=\"text/css\"></style></defs><path d=\"M75.74912227 948.24738475L75.74912227 75.75145131l872.50059037 0 0 872.49593344L75.74912227 948.24738475zM839.18786674 184.81446115L184.81213326 184.81446115l0 654.37573462 654.37573461 0L839.18786674 184.81446115z\" p-id=\"4102\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 59 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "info",
  "use": "info-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"info\"><defs><style type=\"text/css\"></style></defs><path d=\"M512 1012.62222187C235.52 1012.62222187 11.37777813 788.48 11.37777813 512S235.52 11.37777813 512 11.37777813s500.62222187 224.14222187 500.62222187 500.62222187-224.14222187 500.62222187-500.62222187 500.62222187z m0-91.02222187c226.21297813 0 409.6-183.38702187 409.6-409.6S738.21297813 102.4 512 102.4 102.4 285.78702187 102.4 512s183.38702187 409.6 409.6 409.6z m0-91.02222187a45.51111147 45.51111147 0 1 1 0-91.02222293 45.51111147 45.51111147 0 0 1 0 91.02222293z m45.4656-202.9340448a45.51111147 45.51111147 0 1 1-90.9312-3.73191146 180.224 180.224 0 0 1 17.11217813-67.8115552c13.5395552-28.8768 34.3836448-51.97368853 63.80657707-65.24017814C594.69368853 469.53813333 625.77777813 427.87271147 625.77777813 398.22222187a113.77777813 113.77777813 0 0 0-227.55555626 0 45.51111147 45.51111147 0 1 1-91.02222187 0 204.8 204.8 0 0 1 409.6 0c0 68.08462187-53.97617813 140.44728853-131.93671147 175.60462293-7.62311147 3.43608853-13.83537813 10.33102187-18.81884373 20.9351104a97.62133333 97.62133333 0 0 0-7.28177813 23.5064896 81.96551147 81.96551147 0 0 0-1.29706667 9.37528853z\" p-id=\"4713\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 60 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "restore",
  "use": "restore-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"restore\"><defs><style type=\"text/css\"></style></defs><path d=\"M256 256V149.333333c0-58.88 47.829333-106.666667 106.666667-106.666666h512c58.88 0 106.666667 47.829333 106.666666 106.666666v512c0 58.88-47.829333 106.666667-106.666666 106.666667h-106.666667v106.666667c0 58.88-47.829333 106.666667-106.666667 106.666666H149.333333c-58.88 0-106.666667-47.829333-106.666666-106.666666V362.666667c0-58.88 47.829333-106.666667 106.666666-106.666667h106.666667z m0 85.333333H149.333333c-11.733333 0-21.333333 9.6-21.333333 21.333334v512c0 11.733333 9.6 21.333333 21.333333 21.333333h512c11.733333 0 21.333333-9.6 21.333334-21.333333v-106.666667H362.666667c-58.88 0-106.666667-47.829333-106.666667-106.666667V341.333333z m85.333333-192v512c0 11.733333 9.6 21.333333 21.333334 21.333334h512c11.733333 0 21.333333-9.6 21.333333-21.333334V149.333333c0-11.733333-9.6-21.333333-21.333333-21.333333H362.666667c-11.733333 0-21.333333 9.6-21.333334 21.333333z\" p-id=\"4342\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 61 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "above",
  "use": "above-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"above\"><defs><style type=\"text/css\"></style></defs><path d=\"M863.92416068 184.3484319H160.07583932a50.27488011 50.27488011 0 0 1 0-100.5497602h703.84832136a50.27488011 50.27488011 0 0 1 0 100.5497602z m-50.27488007 804.39808157a50.22460522 50.22460522 0 0 1-35.69516489-14.57971521L512 708.21268254l-265.95411572 265.95411572A50.27488011 50.27488011 0 0 1 160.07583932 938.47163339V335.1730722a50.27488011 50.27488011 0 0 1 50.27488007-50.27488013h603.29856122a50.27488011 50.27488011 0 0 1 50.27488007 50.27488013v603.29856119a50.27488011 50.27488011 0 0 1-50.27488007 50.27488008z m-301.64928061-402.19904078a50.22460522 50.22460522 0 0 1 35.69516487 14.57971522L763.37440051 816.80642355V385.44795228H260.62559949v431.86122007l215.67923564-215.67923564A50.27488011 50.27488011 0 0 1 512 586.54747269z\" p-id=\"4947\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 62 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "more",
  "use": "more-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"more\"><defs><style type=\"text/css\"></style></defs><path d=\"M512 269.254656a97.10978845 97.10978845 0 1 0 0-194.16132267 97.10978845 97.10978845 0 0 0 0 194.16132267z\" p-id=\"4591\" /><path d=\"M512 512m-97.10978845 0a97.10978845 97.10978845 0 1 0 194.2195769 0 97.10978845 97.10978845 0 1 0-194.2195769 0Z\" p-id=\"4592\" /><path d=\"M512 948.90666667a97.10978845 97.10978845 0 1 0 0-194.21957689 97.10978845 97.10978845 0 0 0 0 194.21957689z\" p-id=\"4593\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 63 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "icon",
  "use": "icon-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"icon\"><defs><style type=\"text/css\"></style></defs><path d=\"M853.333333 1024L170.666667 1024c-93.866667 0-170.666667-76.8-170.666667-170.666667L0 170.666667c0-93.866667 76.8-170.666667 170.666667-170.666667l682.66666699 0c93.866667 0 170.666667 76.8 170.66666701 170.666667l0 682.66666699C1024 947.2 947.2 1024 853.333333 1024zM170.666667 85.333333C123.733333 85.333333 85.333333 123.733333 85.333333 170.666667l0 682.66666699c0 46.933333 38.4 85.333333 85.33333301 85.33333301l682.66666699 0c46.933333 0 85.333333-38.4 85.33333301-85.33333301L938.666667 170.666667c0-46.933333-38.4-85.333333-85.33333301-85.33333301L170.666667 85.333333z\" p-id=\"1156\" /><path d=\"M981.333333 341.333333L42.666667 341.333333C17.066667 341.333333 0 324.266667 0 298.666667s17.066667-42.666667 42.666667-42.666667l938.66666699 0c25.6 0 42.666667 17.066667 42.66666701 42.666667S1006.933333 341.333333 981.333333 341.333333z\" p-id=\"1157\" /><path d=\"M170.666667 170.666667m-42.666667 0a1 1 0 1 0 85.333333 0 1 1 0 1 0-85.333333 0Z\" p-id=\"1158\" /><path d=\"M170.666667 234.666667C136.533333 234.666667 106.666667 204.8 106.666667 170.666667S136.533333 106.666667 170.666667 106.666667 234.666667 136.533333 234.666667 170.666667 204.8 234.666667 170.666667 234.666667zM170.666667 149.333333C157.866667 149.333333 149.333333 157.866667 149.333333 170.666667S157.866667 192 170.666667 192 192 183.466667 192 170.666667 183.466667 149.333333 170.666667 149.333333z\" p-id=\"1159\" /><path d=\"M298.666667 170.666667m-42.666667 0a1 1 0 1 0 85.333333 0 1 1 0 1 0-85.333333 0Z\" p-id=\"1160\" /><path d=\"M298.666667 234.666667C264.533333 234.666667 234.666667 204.8 234.666667 170.666667S264.533333 106.666667 298.666667 106.666667 362.666667 136.533333 362.666667 170.666667 332.8 234.666667 298.666667 234.666667zM298.666667 149.333333C285.866667 149.333333 277.333333 157.866667 277.333333 170.666667S285.866667 192 298.666667 192 320 183.466667 320 170.666667 311.466667 149.333333 298.666667 149.333333z\" p-id=\"1161\" /><path d=\"M426.666667 170.666667m-42.666667 0a1 1 0 1 0 85.333333 0 1 1 0 1 0-85.333333 0Z\" p-id=\"1162\" /><path d=\"M426.666667 234.666667C392.533333 234.666667 362.666667 204.8 362.666667 170.666667S392.533333 106.666667 426.666667 106.666667s64 29.866667 64 64S460.8 234.666667 426.666667 234.666667zM426.666667 149.333333C413.866667 149.333333 405.333333 157.866667 405.333333 170.666667S413.866667 192 426.666667 192s21.333333-8.533333 21.333333-21.333333S439.466667 149.333333 426.666667 149.333333z\" p-id=\"1163\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 64 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "right",
  "use": "right-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"right\"><defs><style type=\"text/css\"></style></defs><path d=\"M737.95577083 554.36670718a42.64915156 42.64915156 0 0 1-29.93913978-12.4275674l-451.91154165-451.91154165a42.36670718 42.36670718 0 0 1 59.87827955-59.87827955l451.91154165 451.91154164a42.08426279 42.08426279 0 0 1 0 59.87827956 42.64915156 42.64915156 0 0 1-29.93913977 12.4275674z\" p-id=\"1702\" /><path d=\"M286.04422917 1006.27824882a42.64915156 42.64915156 0 0 1-29.93913977-12.4275674 42.08426279 42.08426279 0 0 1 0-59.87827955l451.91154165-451.91154165a42.36670718 42.36670718 0 0 1 59.87827955 59.87827956l-451.91154165 451.91154164a42.64915156 42.64915156 0 0 1-29.93913978 12.4275674z\" p-id=\"1703\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 65 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "about",
  "use": "about-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"about\"><defs><style type=\"text/css\"></style></defs><path d=\"M512 1012.62222187C235.52 1012.62222187 11.37777813 788.48 11.37777813 512S235.52 11.37777813 512 11.37777813s500.62222187 224.14222187 500.62222187 500.62222187-224.14222187 500.62222187-500.62222187 500.62222187z m0-91.02222187c226.21297813 0 409.6-183.38702187 409.6-409.6S738.21297813 102.4 512 102.4 102.4 285.78702187 102.4 512s183.38702187 409.6 409.6 409.6z m0-91.02222187a45.51111147 45.51111147 0 1 1 0-91.02222293 45.51111147 45.51111147 0 0 1 0 91.02222293z m45.4656-202.9340448a45.51111147 45.51111147 0 1 1-90.9312-3.73191146 180.224 180.224 0 0 1 17.11217813-67.8115552c13.5395552-28.8768 34.3836448-51.97368853 63.80657707-65.24017814C594.69368853 469.53813333 625.77777813 427.87271147 625.77777813 398.22222187a113.77777813 113.77777813 0 0 0-227.55555626 0 45.51111147 45.51111147 0 1 1-91.02222187 0 204.8 204.8 0 0 1 409.6 0c0 68.08462187-53.97617813 140.44728853-131.93671147 175.60462293-7.62311147 3.43608853-13.83537813 10.33102187-18.81884373 20.9351104a97.62133333 97.62133333 0 0 0-7.28177813 23.5064896 81.96551147 81.96551147 0 0 0-1.29706667 9.37528853z\" p-id=\"1690\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 66 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "success",
  "use": "success-usage",
  "viewBox": "0 0 1025 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1025 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"success\"><defs><style type=\"text/css\"></style></defs><path d=\"M763.61272889 290.06165333L450.04344889 598.21169778c-1.96721778 1.92853333-5.00849778 2.22435555-7.32615111 0.71566222L267.07854222 484.59320889c-0.36636445-0.24917333-0.73955555-0.49152-1.09795555-0.72362667l-0.72362667-0.45056c-0.45056-0.27989333-1.00352-0.48355555-1.48593778-0.75548444-4.99256889-2.72952889-10.64618667-4.41799111-16.74467555-4.41799111-19.41276445 0-35.12433778 15.72636445-35.12433778 35.12433778 0 7.62197333 2.49628445 14.62272 6.61162666 20.3776 1.54624 2.39502222 3.31320889 4.66716445 5.46816 6.71971555l199.25674667 188.65948445c17.25326222 13.81376 42.26616889 11.69749333 56.93326223-4.82190223l329.62446222-391.46609777c10.62456889-12.61568 9.72231111-31.2832-2.06848-42.8088889C795.47050667 278.02965333 775.85408 278.03761778 763.61272889 290.06165333z\" p-id=\"1805\" /><path d=\"M513.99224889-2.72839111c-281.51011555 0-509.72444445 228.21774222-509.72444444 509.72103111 0 281.52718222 228.21432889 509.72899555 509.72444444 509.72899555 281.52263111 0 509.72444445-228.20181333 509.72444444-509.72899555C1023.71669333 225.48935111 795.51488-2.72839111 513.99224889-2.72839111zM513.99224889 953.00608c-246.3232 0-446.00888889-199.67317333-446.00888889-446.01344 0-246.31637333 199.68568889-446.00547555 446.00888889-446.00547555 246.32206222 0 446.00888889 199.68910222 446.00888889 446.00547555C960.00113778 753.33176889 760.31431111 953.00608 513.99224889 953.00608z\" p-id=\"1806\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 67 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "warning",
  "use": "warning-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"warning\"><defs><style type=\"text/css\"></style></defs><path d=\"M897.53493333 990.29333333L128.6304 990.29333333c-51.56266667 0-92.9856-20.37013333-113.67253333-55.89866666-20.69226667-35.52853333-18.17493333-81.93706667 6.93226666-127.2864L409.84533333 106.42346667C435.09866667 60.74346667 472.65066667 34.56 512.82666667 34.56c40.18133333 0 77.696 26.15146667 103.01973333 71.79093333l388.36266667 700.8288c25.1008 45.3504 27.69706667 91.7248 6.9664 127.24906667C990.5216 969.95626667 949.06453333 990.29333333 897.53493333 990.29333333L897.53493333 990.29333333zM512.86613333 108.11306667c-12.7744 0-27.40586667 12.7616-39.2672 34.1312L85.64373333 843.00053333c-12.15573333 21.99253333-15.00053333 41.7472-7.73973333 54.20906667 7.2672 12.43093333 25.76533333 19.57013333 50.72746667 19.57013333l768.90453333 0c25.0016 0 43.46666667-7.09973333 50.72853333-19.57013333 7.2224-12.42986667 4.416-32.17706667-7.7728-54.17066667L552.1344 142.24426667C540.3072 120.87466667 525.60106667 108.11306667 512.86613333 108.11306667L512.86613333 108.11306667zM513.0848 658.4896c-20.14186667 0-36.49066667-16.4416-36.49066667-36.7776L476.59413333 290.71466667c0-20.30186667 16.3488-36.77866667 36.49066667-36.77866667 20.14506667 0 36.49386667 16.4768 36.49386667 36.77866667l0 330.99626666C549.5776 642.048 533.2288 658.4896 513.0848 658.4896zM512.8224 838.2624c31.40373333 0 56.86293333-25.7024 56.86293333-57.40693333s-25.45813333-57.40693333-56.86293333-57.40693334-56.86186667 25.7024-56.86186667 57.40693334S481.41866667 838.2624 512.8224 838.2624z\" p-id=\"2160\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 68 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "error",
  "use": "error-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"error\"><defs><style type=\"text/css\"></style></defs><path d=\"M422.4 750.933333 422.4 750.933333 422.4 750.933333zM512 0C230.4 0 0 230.4 0 512s230.4 512 512 512 512-230.4 512-512S793.6 0 512 0zM512 960C264.533333 960 64 759.466667 64 512S264.533333 64 512 64 960 264.533333 960 512 759.466667 960 512 960zM693.0176 282.702507l51.28832 51.28832-410.30656 410.30656-51.28832-51.28832 410.30656-410.30656ZM282.702507 330.9824l51.28832-51.28832 410.30656 410.30656-51.28832 51.28832-410.30656-410.30656Z\" p-id=\"1921\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 69 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "refresh",
  "use": "refresh-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"refresh\"><defs><style type=\"text/css\"></style></defs><path d=\"M1021.72444445 402.77333333V147.91111111l-83.12149334 83.12149334a509.39676445 509.39676445 0 0 0-425.07377778-228.79345778C232.01564445 2.23914667 3.76832 230.45006222 3.76832 512S232.01564445 1021.76085333 513.52917333 1021.76085333a509.79726222 509.79726222 0 0 0 472.44174222-317.99523555 43.65425778 43.65425778 0 1 0-80.93696-32.87722667 422.52515555 422.52515555 0 0 1-391.50478222 263.49112889C280.25742222 934.37952 91.14965333 745.27175111 91.14965333 512S280.25742222 89.62048 513.52917333 89.62048c150.69639111 0 286.64718222 79.73546667 361.83153778 204.61795555L766.86222222 402.77333333h254.86222223z\" p-id=\"1747\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ })
/******/ ])["default"];
});